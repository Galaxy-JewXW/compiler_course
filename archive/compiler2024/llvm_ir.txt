declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a = dso_local global [6 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 6]
define dso_local void @a1(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = icmp sgt i32 %3, 1
	br i1 %4, label %5, label %8
5:
	%6 = load i32, i32* %2
	%7 = sub i32 %6, 1
	call void @a1(i32 %7)
	br label %8
8:
	ret void
}
define dso_local i32 @a2(i32 %0, i32* %1) {
2:
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32*
	store i32* %1, i32** %4
	%5 = load i32, i32* %3
	%6 = load i32*, i32** %4
	%7 = getelementptr i32, i32* %6, i32 2
	%8 = load i32, i32* %7
	%9 = add i32 %5, %8
	ret i32 %9
}
define dso_local i32 @main() {
0:
	%1 = alloca [3 x i32]
	%2 = getelementptr [3 x i32], [3 x i32]* %1, i32 0, i32 0
	store i32 1, i32* %2
	%3 = getelementptr [3 x i32], [3 x i32]* %1, i32 0, i32 1
	store i32 2, i32* %3
	%4 = getelementptr [3 x i32], [3 x i32]* %1, i32 0, i32 2
	store i32 3, i32* %4
	%5 = getelementptr [3 x i32], [3 x i32]* %1, i32 0, i32 2
	%6 = load i32, i32* %5
	call void @a1(i32 %6)
	%7 = getelementptr [6 x i32], [6 x i32]* @a, i32 0, i32 4
	%8 = load i32, i32* %7
	%9 = getelementptr [6 x i32], [6 x i32]* @a, i32 0, i32 0
	%10 = call i32 @a2(i32 %8,i32* %9) 
	%11 = alloca i32
	store i32 %10, i32* %11
	%12 = load i32, i32* %11
	call void @putint(i32 %12)
	ret i32 0
}
