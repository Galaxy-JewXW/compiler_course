.macro getInt
li $v0, 5
syscall
.end_macro
.macro putInt
li $v0, 1
syscall
.end_macro
.macro putCh
li $v0, 11
syscall
.end_macro
.macro putStr
li $v0, 4
syscall
.end_macro
.data
x: .word 1,2,
hs_new_global_str_0: .asciiz "Hello "
hs_new_global_str_1: .asciiz "love\n"
.text
jal main
li $v0, 10
syscall
main:
main_0:
#%1 = alloca i32
#store i32 5, i32* %1
li $k1, 5
sw $k1, 0($sp)
#%2 = getelementptr inbounds [7 x i8], [7 x i8]* @hs_new_global_str_0, i32 0, i32 0
#call void @putstr(i8* %2)
la $a0, hs_new_global_str_0
putStr
#%3 = load i32, i32* %1
lw $k0, 0($sp)
sw $k0, -8($sp)
#call void @putint(i32 %3)
lw $a0, -8($sp)
putInt
#%4 = getelementptr inbounds [6 x i8], [6 x i8]* @hs_new_global_str_1, i32 0, i32 0
#call void @putstr(i8* %4)
la $a0, hs_new_global_str_1
putStr
#ret i32 0
li $v0, 0
jr $ra
