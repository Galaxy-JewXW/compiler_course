declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)
@a = dso_local global i32 1
@.str.0 = dso_local constant [4 x i8] c"--1\00"
@.str.1 = dso_local constant [4 x i8] c"--2\00"
@.str.2 = dso_local constant [4 x i8] c"--3\00"

define dso_local i32 @func() {
0:
	store i32 2, i32* @a
	ret i32 1
}

define dso_local i32 @func2() {
0:
	store i32 4, i32* @a
	ret i32 10
}

define dso_local i32 @func3() {
0:
	store i32 3, i32* @a
	ret i32 0
}

define dso_local i32 @main() {
0:
	%1 = icmp ne i32 0, 0
	br i1 %1, label %11, label %2
2:
	%3 = call i32 @func()
	%4 = icmp ne i32 %3, 0
	br i1 %4, label %5, label %8
5:
	%6 = call i32 @func3()
	%7 = icmp ne i32 %6, 0
	br i1 %7, label %11, label %8
8:
	%9 = call i32 @func2()
	%10 = icmp ne i32 %9, 0
	br i1 %10, label %11, label %14
11:
	%12 = load i32, i32* @a
	call void @putint(i32 %12)
	%13 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.0, i32 0, i32 0
	call void @putstr(i8* %13)
	br label %14
14:
	%15 = icmp ne i32 1, 0
	br i1 %15, label %19, label %16
16:
	%17 = call i32 @func3()
	%18 = icmp ne i32 %17, 0
	br i1 %18, label %19, label %22
19:
	%20 = load i32, i32* @a
	call void @putint(i32 %20)
	%21 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.1, i32 0, i32 0
	call void @putstr(i8* %21)
	br label %22
22:
	%23 = icmp ne i32 0, 0
	br i1 %23, label %31, label %24
24:
	%25 = call i32 @func3()
	%26 = icmp ne i32 %25, 0
	br i1 %26, label %31, label %27
27:
	%28 = call i32 @func()
	%29 = call i32 @func2()
	%30 = icmp slt i32 %28, %29
	br i1 %30, label %31, label %34
31:
	%32 = load i32, i32* @a
	call void @putint(i32 %32)
	%33 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.2, i32 0, i32 0
	call void @putstr(i8* %33)
	br label %34
34:
	ret i32 0
}

