declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)
@N = dso_local constant i32 10
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]
@.str.0 = dso_local constant [3 x i8] c", \00"

define dso_local i32 @main() {
0:
	%1 = mul i32 2, 5
	%2 = sub i32 0, %1
	%3 = add i32 %2, 0
	%4 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%5 = load i32, i32* %4
	%6 = mul i32 %5, 1
	%7 = add i32 %3, %6
	%8 = sdiv i32 1, 2
	%9 = sub i32 %7, %8
	%10 = mul i32 %9, 5
	%11 = mul i32 7, 5923
	%12 = srem i32 %11, 56
	%13 = mul i32 %12, 57
	%14 = add i32 1, 2
	%15 = sdiv i32 89, 2
	%16 = mul i32 %15, 36
	%17 = sub i32 %16, 53
	%18 = sdiv i32 %17, 1
	%19 = mul i32 %18, 6
	%20 = sub i32 %14, %19
	%21 = mul i32 45, 56
	%22 = sdiv i32 %21, 85
	%23 = sub i32 %22, 56
	%24 = mul i32 35, 56
	%25 = sdiv i32 %24, 4
	%26 = add i32 %23, %25
	%27 = sub i32 %26, 9
	%28 = mul i32 2, %27
	%29 = sub i32 %20, %28
	%30 = add i32 %13, %29
	%31 = sub i32 0, 6
	br label %32
32:
	%33 = phi i32 [ 0, %0 ], [ %86, %87 ]
	%34 = icmp sle i32 %33, 100
	br i1 %34, label %35, label %88
35:
	%36 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%37 = load i32, i32* %36
	%38 = mul i32 %31, %31
	%39 = add i32 %37, %38
	%40 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	store i32 %39, i32* %40
	%41 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%42 = load i32, i32* %41
	%43 = mul i32 %31, %31
	%44 = add i32 %42, %43
	%45 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	store i32 %44, i32* %45
	%46 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%47 = load i32, i32* %46
	%48 = mul i32 %31, %31
	%49 = add i32 %47, %48
	%50 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	store i32 %49, i32* %50
	%51 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%52 = load i32, i32* %51
	%53 = mul i32 %31, %31
	%54 = add i32 %52, %53
	%55 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	store i32 %54, i32* %55
	%56 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%57 = load i32, i32* %56
	%58 = mul i32 %31, %31
	%59 = add i32 %57, %58
	%60 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	store i32 %59, i32* %60
	%61 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%62 = load i32, i32* %61
	%63 = mul i32 %31, %31
	%64 = add i32 %62, %63
	%65 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	store i32 %64, i32* %65
	%66 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%67 = load i32, i32* %66
	%68 = mul i32 %31, %31
	%69 = add i32 %67, %68
	%70 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	store i32 %69, i32* %70
	%71 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%72 = load i32, i32* %71
	%73 = mul i32 %31, %31
	%74 = add i32 %72, %73
	%75 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	store i32 %74, i32* %75
	%76 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%77 = load i32, i32* %76
	%78 = mul i32 %31, %31
	%79 = add i32 %77, %78
	%80 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	store i32 %79, i32* %80
	%81 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%82 = load i32, i32* %81
	%83 = mul i32 %31, %31
	%84 = add i32 %82, %83
	%85 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	store i32 %84, i32* %85
	%86 = add i32 %33, 1
	br label %87
87:
	br label %32
88:
	br label %89
89:
	%90 = phi i32 [ 0, %88 ], [ %96, %97 ]
	%91 = icmp slt i32 %90, 10
	br i1 %91, label %92, label %98
92:
	%93 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %90
	%94 = load i32, i32* %93
	call void @putint(i32 %94)
	%95 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.0, i32 0, i32 0
	call void @putstr(i8* %95)
	%96 = add i32 %90, 1
	br label %97
97:
	br label %89
98:
	call void @putch(i8 10)
	call void @putint(i32 %90)
	%99 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.0, i32 0, i32 0
	call void @putstr(i8* %99)
	call void @putint(i32 %30)
	%100 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.0, i32 0, i32 0
	call void @putstr(i8* %100)
	call void @putint(i32 %31)
	call void @putch(i8 10)
	ret i32 0
}

