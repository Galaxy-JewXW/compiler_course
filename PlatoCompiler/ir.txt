declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	%1 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	br label %2
2:
	%3 = phi i32 [ 0, %0 ], [ %35, %36 ]
	%4 = icmp sle i32 %3, 100
	br i1 %4, label %5, label %37
5:
	%6 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%7 = load i32, i32* %6
	%8 = add i32 %7, 36
	store i32 %8, i32* %6
	%9 = load i32, i32* %1
	%10 = add i32 %9, 36
	store i32 %10, i32* %1
	%11 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%12 = load i32, i32* %11
	%13 = add i32 %12, 36
	store i32 %13, i32* %11
	%14 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%15 = load i32, i32* %14
	%16 = add i32 %15, 36
	store i32 %16, i32* %14
	%17 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%18 = load i32, i32* %17
	%19 = add i32 %18, 36
	store i32 %19, i32* %17
	%20 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%21 = load i32, i32* %20
	%22 = add i32 %21, 36
	store i32 %22, i32* %20
	%23 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%24 = load i32, i32* %23
	%25 = add i32 %24, 36
	store i32 %25, i32* %23
	%26 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%27 = load i32, i32* %26
	%28 = add i32 %27, 36
	store i32 %28, i32* %26
	%29 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%30 = load i32, i32* %29
	%31 = add i32 %30, 36
	store i32 %31, i32* %29
	%32 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%33 = load i32, i32* %32
	%34 = add i32 %33, 36
	store i32 %34, i32* %32
	%35 = add i32 %3, 1
	br label %36
36:
	br label %2
37:
	br label %38
38:
	%39 = phi i32 [ 0, %37 ], [ %44, %45 ]
	%40 = icmp slt i32 %39, 10
	br i1 %40, label %41, label %46
41:
	%42 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %39
	%43 = load i32, i32* %42
	call void @putint(i32 %43)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%44 = add i32 %39, 1
	br label %45
45:
	br label %38
46:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %39)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -8894)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -6)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 0
}
