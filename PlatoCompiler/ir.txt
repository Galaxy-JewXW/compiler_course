declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)



@a = dso_local global [9 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, zeroinitializer]

define dso_local i32 @main() {
0:
	%1 = alloca [30 x i32]
	%2 = getelementptr inbounds [30 x i32], [30 x i32]* %1, i32 0, i32 0
	store i32 1, i32* %2
	%3 = getelementptr inbounds [30 x i32], [30 x i32]* %1, i32 0, i32 1
	store i32 99, i32* %3
	%4 = getelementptr inbounds [30 x i32], [30 x i32]* %1, i32 0, i32 2
	store i32 3, i32* %4
	%5 = alloca i32
	store i32 999, i32* %5
	%6 = alloca i32
	%7 = getelementptr inbounds [30 x i32], [30 x i32]* %1, i32 0, i32 2
	%8 = load i32, i32* %7
	store i32 %8, i32* %6
	%9 = alloca i32
	%10 = load i32, i32* %5
	%11 = add i32 %10, 200
	store i32 %11, i32* %9
	%12 = load i32, i32* %5
	%13 = getelementptr inbounds [9 x i32], [9 x i32]* @a, i32 0, i32 3
	%14 = getelementptr inbounds [9 x i32], [9 x i32]* @a, i32 0, i32 5
	%15 = load i32, i32* %6
	call void @putint(i32 %12)
	call void @putint(i32 4)
	call void @putint(i32 0)
	call void @putint(i32 %15)
	ret i32 0
}
