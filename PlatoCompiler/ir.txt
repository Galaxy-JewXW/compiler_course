declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@symbol = dso_local global [7 x i32] zeroinitializer
@array = dso_local global [7 x i32] zeroinitializer
@n = dso_local global i32 0

define dso_local void @FullArray(i32 %0) {
1:
	%2 = load i32, i32* @n
	%3 = icmp sge i32 %0, %2
	br i1 %3, label %4, label %5
4:
	br label %6
5:
	br label %16
6:
	%7 = phi i32 [ 0, %4 ], [ %11, %12 ]
	%8 = getelementptr inbounds [7 x i32], [7 x i32]* @array, i32 0, i32 %7
	%9 = load i32, i32* %8
	call void @putint(i32 %9)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	br label %10
10:
	%11 = add i32 %7, 1
	br label %12
12:
	%13 = load i32, i32* @n
	%14 = icmp slt i32 %11, %13
	br i1 %14, label %6, label %15
15:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret void
16:
	%17 = phi i32 [ 0, %5 ], [ %22, %23 ]
	%18 = getelementptr inbounds [7 x i32], [7 x i32]* @symbol, i32 0, i32 %17
	%19 = load i32, i32* %18
	%20 = icmp eq i32 %19, 0
	br i1 %20, label %27, label %33
21:
	%22 = add i32 %17, 1
	br label %23
23:
	%24 = load i32, i32* @n
	%25 = icmp slt i32 %22, %24
	br i1 %25, label %16, label %26
26:
	ret void
27:
	%28 = getelementptr inbounds [7 x i32], [7 x i32]* @array, i32 0, i32 %0
	%29 = add i32 %17, 1
	store i32 %29, i32* %28
	%30 = getelementptr inbounds [7 x i32], [7 x i32]* @symbol, i32 0, i32 %17
	store i32 1, i32* %30
	%31 = add i32 %0, 1
	call void @FullArray(i32 %31)
	%32 = getelementptr inbounds [7 x i32], [7 x i32]* @symbol, i32 0, i32 %17
	store i32 0, i32* %32
	br label %33
33:
	br label %21
}

define dso_local i32 @main() {
0:
	%1 = call i32 @getint()
	store i32 %1, i32* @n
	call void @FullArray(i32 0)
	ret i32 0
}
