declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [13 x i8] c"print int : \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.2 = private unnamed_addr constant [10 x i8] c"19373479\0A\00", align 1



define dso_local void @funcDef_void() {
0:
	ret void
}

define dso_local i32 @funcDef_0(i32 %0) {
1:
	%2 = mul i32 %0, 10
	ret i32 %2
}

define dso_local i32 @funcDef_1(i32 %0, i32 %1) {
2:
	%3 = mul i32 %0, %1
	%4 = icmp ne i32 %1, 0
	br i1 %4, label %5, label %9
5:
	%6 = srem i32 %0, %1
	%7 = add i32 %3, %6
	%8 = sdiv i32 %0, %1
	br label %12
9:
	%10 = add i32 %3, %0
	%11 = sdiv i32 %0, 2
	br label %12
12:
	%13 = phi i32 [ %8, %5 ], [ %11, %9 ]
	%14 = phi i32 [ %7, %5 ], [ %10, %9 ]
	%15 = sub i32 %14, %3
	%16 = icmp slt i32 %3, 0
	br i1 %16, label %17, label %19
17:
	%18 = sub i32 0, %3
	br label %19
19:
	%20 = phi i32 [ %3, %12 ], [ %18, %17 ]
	%21 = add i32 1, %20
	%22 = add i32 %15, %13
	%23 = mul i32 %21, %22
	ret i32 %23
}

define dso_local void @printInt(i32 %0) {
1:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %0)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret void
}

define dso_local i32 @main() {
0:
	call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.s.2, i64 0, i64 0))
	%1 = call i32 @getint()
	%2 = call i32 @getint()
	%3 = call i32 @getint()
	%4 = call i32 @getint()
	%5 = icmp sgt i32 %1, 5
	br i1 %5, label %6, label %7
6:
	br label %7
7:
	%8 = phi i32 [ %1, %0 ], [ 5, %6 ]
	br label %9
9:
	%10 = phi i32 [ %4, %7 ], [ %46, %18 ]
	%11 = phi i32 [ %3, %7 ], [ %36, %18 ]
	%12 = phi i32 [ %2, %7 ], [ %28, %18 ]
	%13 = phi i32 [ 10, %7 ], [ %16, %18 ]
	%14 = icmp ne i32 %13, 0
	br i1 %14, label %15, label %19
15:
	%16 = sub i32 %13, 1
	%17 = icmp sge i32 %12, %16
	br i1 %17, label %23, label %27
18:
	br label %9
19:
	%20 = icmp eq i32 0, %13
	%21 = zext i1 %20 to i32
	%22 = icmp ne i32 %21, 0
	br i1 %22, label %53, label %56
23:
	%24 = add i32 %16, 1
	%25 = sdiv i32 %12, %24
	%26 = add i32 %25, %16
	br label %27
27:
	%28 = phi i32 [ %12, %15 ], [ %26, %23 ]
	%29 = icmp sle i32 %11, %16
	br i1 %29, label %30, label %32
30:
	%31 = mul i32 %11, %16
	br label %35
32:
	%33 = add i32 %16, 3
	%34 = srem i32 %11, %33
	br label %35
35:
	%36 = phi i32 [ %31, %30 ], [ %34, %32 ]
	br label %37
37:
	%38 = phi i32 [ %10, %35 ], [ %44, %43 ]
	%39 = icmp slt i32 %38, %36
	br i1 %39, label %40, label %45
40:
	%41 = add i32 %38, %16
	%42 = icmp eq i32 %41, %8
	br i1 %42, label %47, label %48
43:
	%44 = phi i32 [ %51, %50 ], [ %41, %52 ]
	br label %37
45:
	%46 = phi i32 [ %38, %37 ], [ %41, %47 ]
	br label %18
47:
	br label %45
48:
	%49 = icmp ne i32 %41, %28
	br i1 %49, label %50, label %52
50:
	%51 = add i32 %28, %41
	br label %43
52:
	br label %43
53:
	br label %54
54:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %13)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %55
55:
	br label %56
56:
	br label %57
57:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %8)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %58
58:
	br label %59
59:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %12)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %60
60:
	br label %61
61:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %11)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %62
62:
	br label %63
63:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %10)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %64
64:
	br label %65
65:
	%66 = mul i32 %10, %11
	%67 = icmp ne i32 %11, 0
	br i1 %67, label %68, label %72
68:
	%69 = srem i32 %10, %11
	%70 = add i32 %66, %69
	%71 = sdiv i32 %10, %11
	br label %75
72:
	%73 = add i32 %66, %10
	%74 = sdiv i32 %10, 2
	br label %75
75:
	%76 = phi i32 [ %71, %68 ], [ %74, %72 ]
	%77 = phi i32 [ %70, %68 ], [ %73, %72 ]
	%78 = sub i32 %77, %66
	%79 = icmp slt i32 %66, 0
	br i1 %79, label %80, label %82
80:
	%81 = sub i32 0, %66
	br label %82
82:
	%83 = phi i32 [ %66, %75 ], [ %81, %80 ]
	%84 = add i32 1, %83
	%85 = add i32 %78, %76
	%86 = mul i32 %84, %85
	br label %87
87:
	%88 = phi i32 [ %86, %82 ]
	br label %89
89:
	%90 = mul i32 %12, 10
	br label %91
91:
	%92 = phi i32 [ %90, %89 ]
	br label %93
93:
	%94 = mul i32 %88, %92
	%95 = icmp ne i32 %92, 0
	br i1 %95, label %96, label %100
96:
	%97 = srem i32 %88, %92
	%98 = add i32 %94, %97
	%99 = sdiv i32 %88, %92
	br label %103
100:
	%101 = add i32 %94, %88
	%102 = sdiv i32 %88, 2
	br label %103
103:
	%104 = phi i32 [ %99, %96 ], [ %102, %100 ]
	%105 = phi i32 [ %98, %96 ], [ %101, %100 ]
	%106 = sub i32 %105, %94
	%107 = icmp slt i32 %94, 0
	br i1 %107, label %108, label %110
108:
	%109 = sub i32 0, %94
	br label %110
110:
	%111 = phi i32 [ %94, %103 ], [ %109, %108 ]
	%112 = add i32 1, %111
	%113 = add i32 %106, %104
	%114 = mul i32 %112, %113
	br label %115
115:
	%116 = phi i32 [ %114, %110 ]
	br label %117
117:
	br label %118
118:
	br label %119
119:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %88)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %120
120:
	br label %121
121:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %116)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %122
122:
	br label %123
123:
	br label %124
124:
	br label %125
125:
	%126 = phi i32 [ 0, %179 ], [ -5, %124 ]
	%127 = phi i32 [ 0, %179 ], [ -10, %124 ]
	br label %128
128:
	%129 = phi i32 [ 0, %125 ], [ 0, %182 ]
	%130 = add i32 1, %129
	%131 = add i32 %127, %126
	%132 = mul i32 %130, %131
	br label %133
133:
	%134 = phi i32 [ %132, %128 ]
	br label %135
135:
	br label %136
136:
	br label %137
137:
	%138 = phi i32 [ 4, %136 ], [ 6, %207 ]
	%139 = phi i32 [ 40, %136 ], [ 52, %207 ]
	%140 = sub i32 %139, 39
	%141 = add i32 39, %140
	br label %142
142:
	%143 = phi i32 [ 39, %137 ], [ -39, %209 ]
	%144 = add i32 1, %143
	%145 = add i32 %140, %138
	%146 = mul i32 %144, %145
	br label %147
147:
	%148 = phi i32 [ %146, %142 ]
	br label %149
149:
	%150 = mul i32 %134, %148
	%151 = icmp ne i32 %148, 0
	br i1 %151, label %152, label %156
152:
	%153 = srem i32 %134, %148
	%154 = add i32 %150, %153
	%155 = sdiv i32 %134, %148
	br label %159
156:
	%157 = add i32 %150, %134
	%158 = sdiv i32 %134, 2
	br label %159
159:
	%160 = phi i32 [ %155, %152 ], [ %158, %156 ]
	%161 = phi i32 [ %154, %152 ], [ %157, %156 ]
	%162 = sub i32 %161, %150
	%163 = icmp slt i32 %150, 0
	br i1 %163, label %164, label %166
164:
	%165 = sub i32 0, %150
	br label %166
166:
	%167 = phi i32 [ %150, %159 ], [ %165, %164 ]
	%168 = add i32 1, %167
	%169 = add i32 %162, %160
	%170 = mul i32 %168, %169
	br label %171
171:
	%172 = phi i32 [ %170, %166 ]
	br label %173
173:
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %172)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %174
174:
	ret i32 0
}
