declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	%1 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	move 0 -> %3
	br label %2
2:
	%3 = icmp sle i32 %3, 100
	br i1 %3, label %4, label %36
4:
	%5 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%6 = load i32, i32* %5
	%7 = add i32 %6, 36
	store i32 %7, i32* %5
	%8 = load i32, i32* %1
	%9 = add i32 %8, 36
	store i32 %9, i32* %1
	%10 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%11 = load i32, i32* %10
	%12 = add i32 %11, 36
	store i32 %12, i32* %10
	%13 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%14 = load i32, i32* %13
	%15 = add i32 %14, 36
	store i32 %15, i32* %13
	%16 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%17 = load i32, i32* %16
	%18 = add i32 %17, 36
	store i32 %18, i32* %16
	%19 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%20 = load i32, i32* %19
	%21 = add i32 %20, 36
	store i32 %21, i32* %19
	%22 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%23 = load i32, i32* %22
	%24 = add i32 %23, 36
	store i32 %24, i32* %22
	%25 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%26 = load i32, i32* %25
	%27 = add i32 %26, 36
	store i32 %27, i32* %25
	%28 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%29 = load i32, i32* %28
	%30 = add i32 %29, 36
	store i32 %30, i32* %28
	%31 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%32 = load i32, i32* %31
	%33 = add i32 %32, 36
	store i32 %33, i32* %31
	%34 = add i32 %3, 1
	br label %35
35:
	move %34 -> %3
	br label %2
36:
	move 0 -> %39
	br label %37
37:
	%38 = icmp slt i32 %39, 10
	br i1 %38, label %39, label %44
39:
	%40 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %39
	%41 = load i32, i32* %40
	call void @putint(i32 %41)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%42 = add i32 %39, 1
	br label %43
43:
	move %42 -> %39
	br label %37
44:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %39)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -8894)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -6)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 0
}
