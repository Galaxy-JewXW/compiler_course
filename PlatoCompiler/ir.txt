declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.1 = private unnamed_addr constant [9 x i8] c"Tody is \00", align 1
@.s.2 = private unnamed_addr constant [2 x i8] c"-\00", align 1



define dso_local i32 @main() {
0:
	%1 = call i32 @getint()
	call void @putstr(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 2024)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
	call void @putint(i32 9)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
	call void @putint(i32 %1)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	%2 = alloca [12 x i8]
	%3 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 0
	store i8 104, i8* %3
	%4 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 1
	store i8 101, i8* %4
	%5 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 2
	store i8 108, i8* %5
	%6 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 3
	store i8 108, i8* %6
	%7 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 4
	store i8 111, i8* %7
	%8 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 5
	store i8 32, i8* %8
	%9 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 6
	store i8 119, i8* %9
	%10 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 7
	store i8 111, i8* %10
	%11 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 8
	store i8 114, i8* %11
	%12 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 9
	store i8 108, i8* %12
	%13 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 10
	store i8 100, i8* %13
	%14 = getelementptr inbounds [12 x i8], [12 x i8]* %2, i32 0, i32 11
	store i8 0, i8* %14
	br label %15
15:
	%16 = phi i32 [ 0, %0 ], [ %17, %15 ]
	%17 = add i32 %16, 1
	%18 = getelementptr inbounds i8, i8* %3, i32 %17
	%19 = load i8, i8* %18
	%20 = zext i8 %19 to i32
	%21 = icmp ne i32 %20, 0
	br i1 %21, label %15, label %22
22:
	%23 = icmp sgt i32 %17, 4
	br i1 %23, label %24, label %24
24:
	ret i32 0
}
