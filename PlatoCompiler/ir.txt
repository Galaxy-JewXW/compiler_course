declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)



@x = dso_local global i32 0

define dso_local void @f3(i32 %0) {
1:
	store i32 %0, i32* @x
	ret void
}

define dso_local i32 @f4(i32 %0) {
1:
	%2 = icmp sgt i32 %0, 0
	br i1 %2, label %3, label %4
3:
	ret i32 %0
4:
	%5 = sub i32 0, %0
	ret i32 %5
}

define dso_local i32 @main() {
0:
	store i32 -1, i32* @x
	br label %1
1:
	%2 = phi i32 [ 0, %0 ], [ %7, %19 ]
	%3 = phi i32 [ 0, %0 ], [ %21, %19 ]
	%4 = mul i32 %3, %3
	%5 = icmp slt i32 %4, 25
	br i1 %5, label %6, label %22
6:
	%7 = call i32 @getint()
	br label %8
8:
	%9 = icmp sgt i32 %7, 0
	br i1 %9, label %10, label %11
10:
	br label %13
11:
	%12 = sub i32 0, %7
	br label %13
13:
	%14 = phi i32 [ %7, %10 ], [ %12, %11 ]
	br label %15
15:
	store i32 %14, i32* @x
	br label %16
16:
	%17 = load i32, i32* @x
	%18 = icmp slt i32 %17, 0
	br i1 %18, label %24, label %25
19:
	%20 = phi i32 [ %3, %28 ], [ %30, %29 ]
	%21 = add i32 %20, 1
	br label %1
22:
	%23 = phi i32 [ %2, %1 ], [ %7, %24 ]
	ret i32 0
24:
	br label %22
25:
	%26 = load i32, i32* @x
	%27 = icmp sgt i32 %26, 0
	br i1 %27, label %28, label %29
28:
	br label %19
29:
	%30 = add i32 %3, 1
	br label %19
}
