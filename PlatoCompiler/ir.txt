declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = constant [1 x i8] c"\00"
@.s.1 = constant [3 x i8] c", \00"
@.s.2 = constant [2 x i8] c"\0A\00"
@.s.3 = constant [3 x i8] c", \00"
@.s.4 = constant [3 x i8] c", \00"
@.s.5 = constant [2 x i8] c"\0A\00"

@N = dso_local global i32 10
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	%1 = mul i32 2, 5
	%2 = sub i32 0, %1
	%3 = add i32 %2, 0
	%4 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%5 = load i32, i32* %4
	%6 = mul i32 %5, 1
	%7 = add i32 %3, %6
	%8 = sdiv i32 1, 2
	%9 = sub i32 %7, %8
	%10 = mul i32 %9, 5
	%11 = mul i32 7, 5923
	%12 = srem i32 %11, 56
	%13 = mul i32 %12, 57
	%14 = add i32 1, 2
	%15 = sdiv i32 89, 2
	%16 = mul i32 %15, 36
	%17 = sub i32 %16, 53
	%18 = sdiv i32 %17, 1
	%19 = mul i32 %18, 6
	%20 = sub i32 %14, %19
	%21 = mul i32 45, 56
	%22 = sdiv i32 %21, 85
	%23 = sub i32 %22, 56
	%24 = mul i32 35, 56
	%25 = sdiv i32 %24, 4
	%26 = add i32 %23, %25
	%27 = sub i32 %26, 9
	%28 = mul i32 2, %27
	%29 = sub i32 %20, %28
	%30 = add i32 %13, %29
	%31 = sub i32 0, 6
	br label %32
32:
	%33 = phi i32 [ 0, %0 ], [ %86, %35 ]
	%34 = icmp sle i32 %33, 100
	br i1 %34, label %35, label %87
35:
	%36 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%37 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%38 = load i32, i32* %37
	%39 = mul i32 %31, %31
	%40 = add i32 %38, %39
	store i32* %36, i32 %40
	%41 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%42 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%43 = load i32, i32* %42
	%44 = mul i32 %31, %31
	%45 = add i32 %43, %44
	store i32* %41, i32 %45
	%46 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%47 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%48 = load i32, i32* %47
	%49 = mul i32 %31, %31
	%50 = add i32 %48, %49
	store i32* %46, i32 %50
	%51 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%52 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%53 = load i32, i32* %52
	%54 = mul i32 %31, %31
	%55 = add i32 %53, %54
	store i32* %51, i32 %55
	%56 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%57 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%58 = load i32, i32* %57
	%59 = mul i32 %31, %31
	%60 = add i32 %58, %59
	store i32* %56, i32 %60
	%61 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%62 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%63 = load i32, i32* %62
	%64 = mul i32 %31, %31
	%65 = add i32 %63, %64
	store i32* %61, i32 %65
	%66 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%67 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%68 = load i32, i32* %67
	%69 = mul i32 %31, %31
	%70 = add i32 %68, %69
	store i32* %66, i32 %70
	%71 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%72 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%73 = load i32, i32* %72
	%74 = mul i32 %31, %31
	%75 = add i32 %73, %74
	store i32* %71, i32 %75
	%76 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%77 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%78 = load i32, i32* %77
	%79 = mul i32 %31, %31
	%80 = add i32 %78, %79
	store i32* %76, i32 %80
	%81 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%82 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%83 = load i32, i32* %82
	%84 = mul i32 %31, %31
	%85 = add i32 %83, %84
	store i32* %81, i32 %85
	%86 = add i32 %33, 1
	br label %32
87:
	br label %88
88:
	%89 = phi i32 [ 0, %87 ], [ %94, %91 ]
	%90 = icmp slt i32 %89, 10
	br i1 %90, label %91, label %95
91:
	%92 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %89
	%93 = load i32, i32* %92
	call void @putstr(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %93)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.1, i64 0, i64 0))
	%94 = add i32 %89, 1
	br label %88
95:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
	call void @putint(i32 %89)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.3, i64 0, i64 0))
	call void @putint(i32 %30)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.4, i64 0, i64 0))
	call void @putint(i32 %31)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.5, i64 0, i64 0))
	ret i32 0
}
