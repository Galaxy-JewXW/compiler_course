declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	%1 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	br label %2
2:
	%3 = phi i32 [ 0, %0 ], [ %33, %2 ]
	%4 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%5 = load i32, i32* %4
	%6 = add i32 %5, 36
	store i32 %6, i32* %4
	%7 = load i32, i32* %1
	%8 = add i32 %7, 36
	store i32 %8, i32* %1
	%9 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%10 = load i32, i32* %9
	%11 = add i32 %10, 36
	store i32 %11, i32* %9
	%12 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%13 = load i32, i32* %12
	%14 = add i32 %13, 36
	store i32 %14, i32* %12
	%15 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%16 = load i32, i32* %15
	%17 = add i32 %16, 36
	store i32 %17, i32* %15
	%18 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%19 = load i32, i32* %18
	%20 = add i32 %19, 36
	store i32 %20, i32* %18
	%21 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%22 = load i32, i32* %21
	%23 = add i32 %22, 36
	store i32 %23, i32* %21
	%24 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%25 = load i32, i32* %24
	%26 = add i32 %25, 36
	store i32 %26, i32* %24
	%27 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%28 = load i32, i32* %27
	%29 = add i32 %28, 36
	store i32 %29, i32* %27
	%30 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%31 = load i32, i32* %30
	%32 = add i32 %31, 36
	store i32 %32, i32* %30
	%33 = add i32 %3, 1
	%34 = icmp sle i32 %33, 100
	br i1 %34, label %2, label %35
35:
	%36 = phi i32 [ 0, %2 ], [ %39, %35 ]
	%37 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %36
	%38 = load i32, i32* %37
	call void @putint(i32 %38)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%39 = add i32 %36, 1
	%40 = icmp slt i32 %39, 10
	br i1 %40, label %35, label %41
41:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %39)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -8894)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -6)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 0
}
