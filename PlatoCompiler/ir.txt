declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	%1 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%2 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%3 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%4 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%5 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%6 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%7 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%8 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%9 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%10 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	br label %11
11:
	%12 = phi i32 [ 0, %0 ], [ %33, %35 ]
	%13 = load i32, i32* %10
	%14 = add i32 %13, 36
	store i32 %14, i32* %10
	%15 = load i32, i32* %9
	%16 = add i32 %15, 36
	store i32 %16, i32* %9
	%17 = load i32, i32* %8
	%18 = add i32 %17, 36
	store i32 %18, i32* %8
	%19 = load i32, i32* %7
	%20 = add i32 %19, 36
	store i32 %20, i32* %7
	%21 = load i32, i32* %6
	%22 = add i32 %21, 36
	store i32 %22, i32* %6
	%23 = load i32, i32* %5
	%24 = add i32 %23, 36
	store i32 %24, i32* %5
	%25 = load i32, i32* %4
	%26 = add i32 %25, 36
	store i32 %26, i32* %4
	%27 = load i32, i32* %3
	%28 = add i32 %27, 36
	store i32 %28, i32* %3
	%29 = load i32, i32* %2
	%30 = add i32 %29, 36
	store i32 %30, i32* %2
	%31 = load i32, i32* %1
	%32 = add i32 %31, 36
	store i32 %32, i32* %1
	%33 = add i32 %12, 1
	br label %34
34:
	br label %35
35:
	%36 = icmp sle i32 %33, 100
	br i1 %36, label %11, label %37
37:
	br label %38
38:
	%39 = phi i32 [ 0, %37 ], [ %42, %44 ]
	%40 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %39
	%41 = load i32, i32* %40
	call void @putint(i32 %41)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%42 = add i32 %39, 1
	br label %43
43:
	br label %44
44:
	%45 = icmp slt i32 %42, 10
	br i1 %45, label %38, label %46
46:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %42)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -8894)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -6)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 0
}
