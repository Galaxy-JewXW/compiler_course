declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = constant [3 x i8] c", \00"
@.s.1 = constant [2 x i8] c"\0A\00"

@N = dso_local global i32 10
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	br label %1
1:
	%2 = phi i32 [ 0, %0 ], [ %2, %4 ]
	%3 = icmp sle i32 %2, 100
	br i1 %3, label %4, label %26
4:
	%5 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%6 = load i32, i32* %5
	%7 = add i32 %6, 36
	store i32* %5, i32 %7
	%8 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%9 = load i32, i32* %8
	%10 = add i32 %9, 36
	store i32* %8, i32 %10
	%11 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%12 = load i32, i32* %11
	%13 = add i32 %12, 36
	store i32* %11, i32 %13
	%14 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%15 = load i32, i32* %14
	%16 = add i32 %15, 36
	store i32* %14, i32 %16
	%17 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%18 = load i32, i32* %17
	%19 = add i32 %18, 36
	store i32* %17, i32 %19
	%20 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%21 = load i32, i32* %20
	%22 = add i32 %21, 36
	store i32* %20, i32 %22
	%23 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%24 = load i32, i32* %23
	%25 = add i32 %24, 36
	store i32* %23, i32 %25
	ret i32 -8894
26:
	br label %27
27:
	%28 = phi i32 [ 0, %26 ], [ %33, %30 ]
	%29 = icmp slt i32 %28, 10
	br i1 %29, label %30, label %34
30:
	%31 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %28
	%32 = load i32, i32* %31
	call void @putint(i32 %32)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%33 = add i32 %28, 1
	br label %27
34:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %28)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -8894)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 -6)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 -8894
}
