declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.2 = private unnamed_addr constant [6 x i8] c", -6\0A\00", align 1
@.s.3 = private unnamed_addr constant [13 x i8] c", -8983, -6\0A\00", align 1

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
b0:
	%v1 = call i32 @getint()
	%v2 = call i32 @getint()
	%v3 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v4 = load i32, i32* %v3
	%v5 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%v6 = load i32, i32* %v5
	%v7 = mul i32 %v1, %v2
	%v8 = sub i32 0, %v7
	%v9 = mul i32 %v8, 5
	%v10 = add i32 %v9, %v4
	%v11 = sdiv i32 %v10, 5
	%v12 = mul i32 %v11, %v11
	%v13 = add i32 %v6, %v12
	store i32 %v13, i32* %v5
	%v14 = load i32, i32* %v3
	%v15 = add i32 %v14, %v12
	store i32 %v15, i32* %v3
	%v16 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%v17 = load i32, i32* %v16
	%v18 = add i32 %v17, %v12
	store i32 %v18, i32* %v16
	%v19 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%v20 = load i32, i32* %v19
	%v21 = add i32 %v20, %v12
	store i32 %v21, i32* %v19
	%v22 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%v23 = load i32, i32* %v22
	%v24 = add i32 %v23, %v12
	store i32 %v24, i32* %v22
	%v25 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%v26 = load i32, i32* %v25
	%v27 = add i32 %v26, %v12
	store i32 %v27, i32* %v25
	%v28 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%v29 = load i32, i32* %v28
	%v30 = add i32 %v29, %v12
	store i32 %v30, i32* %v28
	%v31 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%v32 = load i32, i32* %v31
	%v33 = add i32 %v32, %v12
	store i32 %v33, i32* %v31
	%v34 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%v35 = load i32, i32* %v34
	%v36 = add i32 %v35, %v12
	store i32 %v36, i32* %v34
	%v37 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%v38 = load i32, i32* %v37
	%v39 = add i32 %v38, %v12
	store i32 %v39, i32* %v37
	br label %b44
b40:
	%v41 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %v45
	%v42 = load i32, i32* %v41
	call void @putint(i32 %v42)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%v43 = add i32 %v45, 1
	br label %b44
b44:
	%v45 = phi i32 [ 0, %b0 ], [ %v43, %b40 ]
	%v46 = icmp slt i32 %v45, 10
	br i1 %v46, label %b40, label %b47
b47:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %v45)
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.3, i64 0, i64 0))
	ret i32 0
}
