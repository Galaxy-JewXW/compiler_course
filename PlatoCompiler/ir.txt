declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.2 = private unnamed_addr constant [6 x i8] c", -6\0A\00", align 1

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @fib(i32 %v0) {
b1:
	%v2 = icmp eq i32 %v0, 1
	br i1 %v2, label %b3, label %b4
b3:
	ret i32 1
b4:
	%v5 = icmp eq i32 %v0, 2
	br i1 %v5, label %b14, label %b6
b6:
	%v7 = sub i32 %v0, 1
	%v8 = call i32 @fib(i32 %v7)
	br label %b9
b9:
	%v10 = sub i32 %v0, 2
	%v11 = call i32 @fib(i32 %v10)
	br label %b12
b12:
	%v13 = add i32 %v8, %v11
	ret i32 %v13
b14:
	ret i32 2
}

define dso_local i32 @main() {
b0:
	%v1 = call i32 @getint()
	%v2 = call i32 @getint()
	%v3 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v4 = load i32, i32* %v3
	%v5 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%v6 = load i32, i32* %v5
	%v7 = mul i32 %v1, %v2
	%v8 = sub i32 0, %v7
	%v9 = call i32 @fib(i32 4)
	br label %b10
b10:
	%v11 = mul i32 %v8, %v9
	%v12 = add i32 %v11, %v4
	%v13 = sdiv i32 %v12, 5
	%v14 = mul i32 %v13, %v13
	%v15 = add i32 %v6, %v14
	store i32 %v15, i32* %v5
	%v16 = load i32, i32* %v3
	%v17 = add i32 %v16, %v14
	store i32 %v17, i32* %v3
	%v18 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%v19 = load i32, i32* %v18
	%v20 = add i32 %v19, %v14
	store i32 %v20, i32* %v18
	%v21 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%v22 = load i32, i32* %v21
	%v23 = add i32 %v22, %v14
	store i32 %v23, i32* %v21
	%v24 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%v25 = load i32, i32* %v24
	%v26 = add i32 %v25, %v14
	store i32 %v26, i32* %v24
	%v27 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%v28 = load i32, i32* %v27
	%v29 = add i32 %v28, %v14
	store i32 %v29, i32* %v27
	%v30 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%v31 = load i32, i32* %v30
	%v32 = add i32 %v31, %v14
	store i32 %v32, i32* %v30
	%v33 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%v34 = load i32, i32* %v33
	%v35 = add i32 %v34, %v14
	store i32 %v35, i32* %v33
	%v36 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%v37 = load i32, i32* %v36
	%v38 = add i32 %v37, %v14
	store i32 %v38, i32* %v36
	%v39 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%v40 = load i32, i32* %v39
	%v41 = add i32 %v40, %v14
	store i32 %v41, i32* %v39
	br label %b46
b42:
	%v43 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %v47
	%v44 = load i32, i32* %v43
	call void @putint(i32 %v44)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%v45 = add i32 %v47, 1
	br label %b46
b46:
	%v47 = phi i32 [ 0, %b10 ], [ %v45, %b42 ]
	%v48 = icmp slt i32 %v47, 10
	br i1 %v48, label %b42, label %b49
b49:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %v47)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%v50 = call i32 @fib(i32 5)
	br label %b51
b51:
	%v52 = add i32 %v50, 2
	%v53 = call i32 @fib(i32 %v52)
	br label %b54
b54:
	%v55 = sub i32 1197, %v53
	%v56 = add i32 %v55, -10091
	call void @putint(i32 %v56)
	call void @putstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.s.2, i64 0, i64 0))
	ret i32 0
}
