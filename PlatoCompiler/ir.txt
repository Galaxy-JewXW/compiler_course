declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.2 = private unnamed_addr constant [6 x i8] c", -6\0A\00", align 1

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @fib(i32 %v0) {
b1:
	%v2 = icmp eq i32 %v0, 1
	br i1 %v2, label %b3, label %b4
b3:
	ret i32 1
b4:
	%v5 = icmp eq i32 %v0, 2
	br i1 %v5, label %b14, label %b6
b6:
	%v7 = sub i32 %v0, 1
	%v8 = call i32 @fib(i32 %v7)
	br label %b9
b9:
	%v10 = sub i32 %v0, 2
	%v11 = call i32 @fib(i32 %v10)
	br label %b12
b12:
	%v13 = add i32 %v8, %v11
	ret i32 %v13
b14:
	ret i32 2
}

define dso_local i32 @main() {
b0:
	%v1 = call i32 @getint()
	%v2 = call i32 @getint()
	%v3 = mul i32 %v1, %v2
	%v4 = sub i32 0, %v3
	%v5 = call i32 @fib(i32 4)
	br label %b6
b6:
	%v7 = mul i32 %v4, %v5
	%v8 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v9 = load i32, i32* %v8
	%v10 = add i32 %v7, %v9
	%v11 = sdiv i32 %v10, 5
	%v12 = call i32 @fib(i32 5)
	br label %b13
b13:
	%v14 = add i32 %v12, 2
	%v15 = call i32 @fib(i32 %v14)
	br label %b16
b16:
	%v17 = sub i32 1197, %v15
	%v18 = add i32 %v17, -10091
	%v19 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%v20 = load i32, i32* %v19
	%v21 = mul i32 %v11, %v11
	%v22 = add i32 %v20, %v21
	store i32 %v22, i32* %v19
	%v23 = load i32, i32* %v8
	%v24 = add i32 %v23, %v21
	store i32 %v24, i32* %v8
	%v25 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%v26 = load i32, i32* %v25
	%v27 = add i32 %v26, %v21
	store i32 %v27, i32* %v25
	%v28 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%v29 = load i32, i32* %v28
	%v30 = add i32 %v29, %v21
	store i32 %v30, i32* %v28
	%v31 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%v32 = load i32, i32* %v31
	%v33 = add i32 %v32, %v21
	store i32 %v33, i32* %v31
	%v34 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%v35 = load i32, i32* %v34
	%v36 = add i32 %v35, %v21
	store i32 %v36, i32* %v34
	%v37 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%v38 = load i32, i32* %v37
	%v39 = add i32 %v38, %v21
	store i32 %v39, i32* %v37
	%v40 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%v41 = load i32, i32* %v40
	%v42 = add i32 %v41, %v21
	store i32 %v42, i32* %v40
	%v43 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%v44 = load i32, i32* %v43
	%v45 = add i32 %v44, %v21
	store i32 %v45, i32* %v43
	%v46 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%v47 = load i32, i32* %v46
	%v48 = add i32 %v47, %v21
	store i32 %v48, i32* %v46
	br label %b53
b49:
	%v50 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %v54
	%v51 = load i32, i32* %v50
	call void @putint(i32 %v51)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%v52 = add i32 %v54, 1
	br label %b53
b53:
	%v54 = phi i32 [ 0, %b16 ], [ %v52, %b49 ]
	%v55 = icmp slt i32 %v54, 10
	br i1 %v55, label %b49, label %b56
b56:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %v54)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %v18)
	call void @putstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.s.2, i64 0, i64 0))
	ret i32 0
}
