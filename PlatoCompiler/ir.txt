declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.2 = private unnamed_addr constant [6 x i8] c", -6\0A\00", align 1

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @fib(i32 %v0) {
b1:
	%v2 = icmp eq i32 %v0, 1
	br i1 %v2, label %b3, label %b4
b3:
	ret i32 1
b4:
	%v5 = icmp eq i32 %v0, 2
	br i1 %v5, label %b12, label %b6
b6:
	%v7 = sub i32 %v0, 1
	%v8 = call i32 @fib(i32 %v7)
	%v9 = sub i32 %v0, 2
	%v10 = call i32 @fib(i32 %v9)
	%v11 = add i32 %v8, %v10
	ret i32 %v11
b12:
	ret i32 2
}

define dso_local i32 @main() {
b0:
	%v1 = call i32 @getint()
	%v2 = call i32 @getint()
	%v3 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v4 = load i32, i32* %v3
	%v5 = mul i32 %v1, %v2
	%v6 = sub i32 0, %v5
	%v7 = call i32 @fib(i32 4)
	%v8 = mul i32 %v6, %v7
	%v9 = add i32 %v8, %v4
	%v10 = sdiv i32 %v9, 5
	%v11 = icmp slt i32 %v10, 100
	%v12 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%v13 = mul i32 %v10, %v10
	%v14 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%v15 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%v16 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%v17 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%v18 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%v19 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%v20 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%v21 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	br label %b52
b22:
	%v23 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %v55
	%v24 = load i32, i32* %v23
	call void @putint(i32 %v24)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%v25 = add i32 %v55, 1
	br label %b54
b26:
	%v27 = load i32, i32* %v12
	%v28 = add i32 %v27, %v13
	store i32 %v28, i32* %v12
	%v29 = load i32, i32* %v3
	%v30 = add i32 %v29, %v13
	store i32 %v30, i32* %v3
	%v31 = load i32, i32* %v14
	%v32 = add i32 %v31, %v13
	store i32 %v32, i32* %v14
	%v33 = load i32, i32* %v15
	%v34 = add i32 %v33, %v13
	store i32 %v34, i32* %v15
	%v35 = load i32, i32* %v16
	%v36 = add i32 %v35, %v13
	store i32 %v36, i32* %v16
	%v37 = load i32, i32* %v17
	%v38 = add i32 %v37, %v13
	store i32 %v38, i32* %v17
	%v39 = load i32, i32* %v18
	%v40 = add i32 %v39, %v13
	store i32 %v40, i32* %v18
	%v41 = load i32, i32* %v19
	%v42 = add i32 %v41, %v13
	store i32 %v42, i32* %v19
	%v43 = load i32, i32* %v20
	%v44 = add i32 %v43, %v13
	store i32 %v44, i32* %v20
	%v45 = load i32, i32* %v21
	%v46 = add i32 %v45, %v13
	store i32 %v46, i32* %v21
	br label %b52
b47:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %v55)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%v48 = add i32 %v7, 2
	%v49 = call i32 @fib(i32 %v48)
	%v50 = sub i32 1197, %v49
	%v51 = add i32 %v50, -10091
	call void @putint(i32 %v51)
	call void @putstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.s.2, i64 0, i64 0))
	ret i32 0
b52:
	br i1 %v11, label %b26, label %b53
b53:
	br label %b54
b54:
	%v55 = phi i32 [ 0, %b53 ], [ %v25, %b22 ]
	%v56 = icmp slt i32 %v55, 10
	br i1 %v56, label %b22, label %b47
}
