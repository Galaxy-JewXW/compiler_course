.data:
s0: .asciiz ", "
s1: .asciiz "\n"
s2: .asciiz ", -6\n"
s3: .asciiz ", -8983, -6\n"
a: .word 0, 1, 2, 3, 4, 5, 6, 7, 8, 9

.text:
func_main:
main_bb0:
    # %v1 = call i32 @getint()
    li $v0, 5
    syscall
    move $t3, $v0
    # %v2 = call i32 @getint()
    li $v0, 5
    syscall
    move $t5, $v0
    # %v3 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
    la $k0, a
    addiu $t2, $k0, 4
    # %v4 = load i32, i32* %v3
    lw $t1, 0($t2)
    # %v5 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
    move $t4, $k0
    # %v6 = load i32, i32* %v5
    lw $t6, 0($t4)
    # %v7 = mul i32 %v1, %v2
    mul $t3, $t3, $t5
    # %v8 = sub i32 0, %v7
    neg $t3, $t3
    # %v9 = mul i32 %v8, 5
    sll $v0, $t3, 2
    addu $t3, $v0, $t3
    # %v10 = add i32 %v9, %v4
    addu $t1, $t3, $t1
    # %v11 = sdiv i32 %v10, 5
    li $v0, 858993460
    mult $t1, $v0
    mfhi $v1
    sra $v0, $v1, 0
    srl $a0, $t1, 31
    addu $t1, $v0, $a0
    # %v12 = mul i32 %v11, %v11
    mul $t1, $t1, $t1
    # %v13 = add i32 %v6, %v12
    addu $t3, $t6, $t1
    # store i32 %v13, i32* %v5
    sw $t3, 0($t4)
    # %v14 = load i32, i32* %v3
    lw $t3, 0($t2)
    # %v15 = add i32 %v14, %v12
    addu $t3, $t3, $t1
    # store i32 %v15, i32* %v3
    sw $t3, 0($t2)
    # %v16 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
    addiu $t3, $k0, 8
    # %v17 = load i32, i32* %v16
    lw $t2, 0($t3)
    # %v18 = add i32 %v17, %v12
    addu $t2, $t2, $t1
    # store i32 %v18, i32* %v16
    sw $t2, 0($t3)
    # %v19 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
    addiu $t3, $k0, 12
    # %v20 = load i32, i32* %v19
    lw $t2, 0($t3)
    # %v21 = add i32 %v20, %v12
    addu $t2, $t2, $t1
    # store i32 %v21, i32* %v19
    sw $t2, 0($t3)
    # %v22 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
    addiu $t2, $k0, 16
    # %v23 = load i32, i32* %v22
    lw $t3, 0($t2)
    # %v24 = add i32 %v23, %v12
    addu $t3, $t3, $t1
    # store i32 %v24, i32* %v22
    sw $t3, 0($t2)
    # %v25 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
    addiu $t2, $k0, 20
    # %v26 = load i32, i32* %v25
    lw $t3, 0($t2)
    # %v27 = add i32 %v26, %v12
    addu $t3, $t3, $t1
    # store i32 %v27, i32* %v25
    sw $t3, 0($t2)
    # %v28 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
    addiu $t2, $k0, 24
    # %v29 = load i32, i32* %v28
    lw $t3, 0($t2)
    # %v30 = add i32 %v29, %v12
    addu $t3, $t3, $t1
    # store i32 %v30, i32* %v28
    sw $t3, 0($t2)
    # %v31 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
    addiu $t3, $k0, 28
    # %v32 = load i32, i32* %v31
    lw $t2, 0($t3)
    # %v33 = add i32 %v32, %v12
    addu $t2, $t2, $t1
    # store i32 %v33, i32* %v31
    sw $t2, 0($t3)
    # %v34 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
    addiu $t3, $k0, 32
    # %v35 = load i32, i32* %v34
    lw $t2, 0($t3)
    # %v36 = add i32 %v35, %v12
    addu $t2, $t2, $t1
    # store i32 %v36, i32* %v34
    sw $t2, 0($t3)
    # %v37 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
    addiu $t3, $k0, 36
    # %v38 = load i32, i32* %v37
    lw $t2, 0($t3)
    # %v39 = add i32 %v38, %v12
    addu $t1, $t2, $t1
    # store i32 %v39, i32* %v37
    sw $t1, 0($t3)
    # move 0 -> %v45
    li $t0, 0
    # br label %b46
    j main_bb46

main_bb41:
    # %v42 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %v45
    la $k0, a
    sll $k1, $t0, 2
    addu $t1, $k0, $k1
    # %v43 = load i32, i32* %v42
    lw $t1, 0($t1)
    # call void @putint(i32 %v43)
    move $a0, $t1
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
    la $a0, s0
    li $v0, 4
    syscall
    # %v44 = add i32 %v45, 1
    addiu $t0, $t0, 1
    # move %v44 -> %v45
    # br label %b46

main_bb46:
    # %v47 = icmp slt i32 %v45, 10
    # br i1 %v47, label %b41, label %b48
    blt $t0, 10, main_bb41

main_bb48:
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # call void @putint(i32 %v45)
    move $a0, $t0
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.3, i64 0, i64 0))
    la $a0, s3
    li $v0, 4
    syscall
    # ret i32 0
    li $v0, 10
    syscall

