.data:
s0: .asciiz "Sum: "
s1: .asciiz "\n"
s2: .asciiz "Product: "
s3: .asciiz "Case 1\n"
s4: .asciiz "Case 2\n"
s5: .asciiz "Case 3\n"
s6: .asciiz "Case 4\n"
s7: .asciiz "Case 5\n"
s8: .asciiz "Case 6\n"
s9: .asciiz "\nProduct: "
arr: .word 0:10

.text:
func_main:
main_bb0:
    # %v1 = call i32 @getint()
    li $v0, 5
    syscall
    move $s6, $v0
    # %v2 = call i32 @getint()
    li $v0, 5
    syscall
    move $s5, $v0
    # %v3 = icmp eq i32 %v1, 0
    # br i1 %v3, label %b22, label %b4
    beq $s6, 0, main_bb22

main_bb4:
    # %v5 = icmp eq i32 %v2, 0
    # br i1 %v5, label %b46, label %b6
    beq $s5, 0, main_bb46

main_bb6:
    # %v7 = add i32 %v1, %v2
    addu $t2, $s6, $s5
    # move %v7 -> %v42
    move $s7, $t2
    # br label %b48
    j main_bb48

main_bb9:
    # %v10 = load i32, i32* %v27
    lw $t6, 0($s1)
    # %v11 = add i32 %v10, 1
    addiu $t6, $t6, 1
    # store i32 %v11, i32* %v27
    sw $t6, 0($s1)
    # br label %b33
    j main_bb33

main_bb12:
    # %v13 = icmp eq i32 %v110, 0
    # br i1 %v13, label %b50, label %b60
    beq $t5, 0, main_bb50
    j main_bb60

main_bb14:
    # br i1 %v13, label %b41, label %b15
    beq $t5, 0, main_bb41

main_bb15:
    # move %v110 -> %v38
    move $s2, $t5
    # br label %b43
    j main_bb43

main_bb17:
    # %v18 = icmp ne i32 %v2, 0
    # br i1 %v18, label %b76, label %b36
    bne $s5, 0, main_bb76
    j main_bb36

main_bb19:
    # %v20 = mul i32 %v109, %v110
    mul $t3, $t6, $t5
    # move %v20 -> %v65
    move $s0, $t3
    # br label %b73
    j main_bb73

main_bb22:
    # %v23 = icmp eq i32 %v2, 0
    # br i1 %v23, label %b89, label %b83
    beq $s5, 0, main_bb89
    j main_bb83

main_bb24:
    # %v25 = icmp eq i32 %v85, 0
    # br i1 %v25, label %b38, label %b66
    beq $s5, 0, main_bb38
    j main_bb66

main_bb26:
    # %v27 = getelementptr inbounds i32, i32* %v98, i32 %v88
    sll $k1, $s3, 2
    addu $s1, $s6, $k1
    # %v28 = load i32, i32* %v27
    lw $t6, 0($s1)
    # %v29 = icmp sgt i32 %v28, 0
    # br i1 %v29, label %b9, label %b30
    bgt $t6, 0, main_bb9

main_bb30:
    # %v31 = load i32, i32* %v27
    lw $t6, 0($s1)
    # %v32 = sub i32 %v31, 1
    addiu $t6, $t6, -1
    # store i32 %v32, i32* %v27
    sw $t6, 0($s1)
    # br label %b33

main_bb33:
    # %v34 = add i32 %v88, 1
    addiu $s1, $s3, 1
    # move %v34 -> %v88
    move $s3, $s1
    # br label %b100
    j main_bb100

main_bb36:
    # move 0 -> %v70
    li $t6, 0
    # br label %b79
    j main_bb79

main_bb38:
    # %v39 = call i32 @getint()
    li $v0, 5
    syscall
    move $t6, $v0
    # %v40 = icmp eq i32 %v39, 0
    # br i1 %v40, label %b59, label %b57
    beq $t6, 0, main_bb59
    j main_bb57

main_bb41:
    # move 0 -> %v38
    li $s2, 0
    # br label %b43

main_bb43:
    # move %v38 -> %v104
    move $t1, $s2
    # br label %b117
    j main_bb117

main_bb45:
    # call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.s.5, i64 0, i64 0))
    la $a0, s5
    li $v0, 4
    syscall
    # br label %b72
    j main_bb72

main_bb46:
    # move %v1 -> %v42
    move $s7, $s6
    # br label %b48

main_bb48:
    # move %v42 -> %v81
    move $t2, $s7
    # br label %b93
    j main_bb93

main_bb50:
    # %v51 = icmp eq i32 %v109, 0
    # br i1 %v51, label %b14, label %b52
    beq $t6, 0, main_bb14

main_bb52:
    # br i1 %v13, label %b113, label %b53
    beq $t5, 0, main_bb113

main_bb53:
    # %v54 = add i32 %v109, %v110
    addu $t4, $t6, $t5
    # move %v54 -> %v102
    move $t0, $t4
    # br label %b115
    j main_bb115

main_bb56:
    # call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.s.4, i64 0, i64 0))
    la $a0, s4
    li $v0, 4
    syscall
    # br label %b81
    j main_bb81

main_bb57:
    # %v58 = icmp eq i32 %v39, 1
    # br i1 %v58, label %b59, label %b56
    bne $t6, 1, main_bb56

main_bb59:
    # call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.s.3, i64 0, i64 0))
    la $a0, s3
    li $v0, 4
    syscall
    # br label %b81
    j main_bb81

main_bb60:
    # %v61 = icmp ne i32 %v109, 0
    # br i1 %v61, label %b62, label %b85
    beq $t6, 0, main_bb85

main_bb62:
    # %v63 = icmp ne i32 %v110, 0
    # br i1 %v63, label %b19, label %b64
    bne $t5, 0, main_bb19

main_bb64:
    # move 0 -> %v65
    li $s0, 0
    # br label %b73
    j main_bb73

main_bb66:
    # %v67 = call i32 @getint()
    li $v0, 5
    syscall
    move $t6, $v0
    # %v68 = icmp eq i32 %v67, 2
    # br i1 %v68, label %b45, label %b69
    beq $t6, 2, main_bb45

main_bb69:
    # %v70 = icmp eq i32 %v67, 3
    # br i1 %v70, label %b45, label %b71
    beq $t6, 3, main_bb45

main_bb71:
    # call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.s.6, i64 0, i64 0))
    la $a0, s6
    li $v0, 4
    syscall
    # br label %b72

main_bb72:
    # br label %b82
    j main_bb82

main_bb73:
    # move %v65 -> %v76
    move $t7, $s0
    # br label %b87
    j main_bb87

main_bb75:
    # call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.s.7, i64 0, i64 0))
    la $a0, s7
    li $v0, 4
    syscall
    # br label %b110
    j main_bb110

main_bb76:
    # %v77 = mul i32 %v1, %v2
    mul $t6, $s6, $s5
    # move %v77 -> %v70
    # br label %b79

main_bb79:
    # move %v70 -> %v85
    move $s5, $t6
    # br label %b97
    j main_bb97

main_bb81:
    # br label %b82

main_bb82:
    # br label %b111
    j main_bb111

main_bb83:
    # move %v2 -> %v79
    move $t8, $s5
    # br label %b91
    j main_bb91

main_bb85:
    # move 0 -> %v76
    li $t7, 0
    # br label %b87

main_bb87:
    # move %v76 -> %v106
    move $s4, $t7
    # br label %b119
    j main_bb119

main_bb89:
    # move 0 -> %v79
    li $t8, 0
    # br label %b91

main_bb91:
    # move %v79 -> %v81
    move $t2, $t8
    # br label %b93

main_bb93:
    # %v94 = icmp ne i32 %v1, 0
    # br i1 %v94, label %b17, label %b95
    bne $s6, 0, main_bb17

main_bb95:
    # move 0 -> %v85
    li $s5, 0
    # br label %b97

main_bb97:
    # call void @putstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.s.0, i64 0, i64 0))
    la $a0, s0
    li $v0, 4
    syscall
    # call void @putint(i32 %v81)
    move $a0, $t2
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.s.9, i64 0, i64 0))
    la $a0, s9
    li $v0, 4
    syscall
    # call void @putint(i32 %v85)
    move $a0, $s5
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # %v98 = getelementptr inbounds [10 x i32], [10 x i32]* @arr, i32 0, i32 0
    la $k0, arr
    move $s6, $k0
    # move 0 -> %v88
    li $s3, 0
    # br label %b100

main_bb100:
    # %v101 = icmp slt i32 %v88, 10
    # br i1 %v101, label %b26, label %b102
    blt $s3, 10, main_bb26

main_bb102:
    # %v103 = icmp eq i32 %v81, 0
    # br i1 %v103, label %b24, label %b104
    beq $t2, 0, main_bb24

main_bb104:
    # %v105 = call i32 @getint()
    li $v0, 5
    syscall
    move $t6, $v0
    # %v106 = icmp eq i32 %v105, 4
    # br i1 %v106, label %b75, label %b107
    beq $t6, 4, main_bb75

main_bb107:
    # %v108 = icmp eq i32 %v105, 5
    # br i1 %v108, label %b75, label %b109
    beq $t6, 5, main_bb75

main_bb109:
    # call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.s.8, i64 0, i64 0))
    la $a0, s8
    li $v0, 4
    syscall
    # br label %b110

main_bb110:
    # br label %b111

main_bb111:
    # move 0 -> %v109
    li $t6, 0
    # move 0 -> %v110
    li $t5, 0
    # br label %b122
    j main_bb122

main_bb113:
    # move %v109 -> %v102
    move $t0, $t6
    # br label %b115

main_bb115:
    # move %v102 -> %v104
    move $t1, $t0
    # br label %b117

main_bb117:
    # move %v104 -> %v106
    move $s4, $t1
    # br label %b119

main_bb119:
    # %v120 = add i32 %v110, 1
    addiu $t5, $t5, 1
    # move %v106 -> %v109
    move $t6, $s4
    # move %v120 -> %v110
    # br label %b122

main_bb122:
    # %v123 = icmp slt i32 %v110, 5
    # br i1 %v123, label %b12, label %b124
    blt $t5, 5, main_bb12

main_bb124:
    # ret i32 0
    li $v0, 10
    syscall

