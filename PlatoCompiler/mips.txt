.data:
s0: .asciiz ", "
s1: .asciiz "\n"
s2: .asciiz ", -6\n"
a: .word 0, 1, 2, 3, 4, 5, 6, 7, 8, 9

.text:
func_main:
main_bb0:
    # %v1 = call i32 @getint()
    li $v0, 5
    syscall
    move $t1, $v0
    # %v2 = call i32 @getint()
    li $v0, 5
    syscall
    move $t2, $v0
    # %v3 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
    la $k0, a
    addiu $t4, $k0, 4
    # %v4 = load i32, i32* %v3
    lw $t3, 0($t4)
    # %v5 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
    move $t5, $k0
    # %v6 = load i32, i32* %v5
    lw $t6, 0($t5)
    # %v7 = mul i32 %v1, %v2
    mul $t1, $t1, $t2
    # %v8 = sub i32 0, %v7
    neg $t1, $t1
    # %v9 = call i32 @fib(i32 4)
    sw $t3, -4($sp)
    sw $t5, -8($sp)
    sw $t2, -12($sp)
    sw $t6, -16($sp)
    sw $t1, -20($sp)
    sw $t4, -24($sp)
    sw $t0, -28($sp)
    sw $ra, -32($sp)
    li $a1, 4
    addiu $sp, $sp, -32
    jal func_fib
    lw $ra, 0($sp)
    addiu $sp, $sp, 32
    lw $t3, -4($sp)
    lw $t5, -8($sp)
    lw $t2, -12($sp)
    lw $t6, -16($sp)
    lw $t1, -20($sp)
    lw $t4, -24($sp)
    lw $t0, -28($sp)
    move $t2, $v0
    # br label %b10

main_bb10:
    # %v11 = mul i32 %v8, %v9
    mul $t1, $t1, $t2
    # %v12 = add i32 %v11, %v4
    addu $t1, $t1, $t3
    # %v13 = sdiv i32 %v12, 5
    li $v0, 858993460
    mult $t1, $v0
    mfhi $v1
    sra $v0, $v1, 0
    srl $a0, $t1, 31
    addu $t1, $v0, $a0
    # %v14 = mul i32 %v13, %v13
    mul $t3, $t1, $t1
    # %v15 = add i32 %v6, %v14
    addu $t1, $t6, $t3
    # store i32 %v15, i32* %v5
    sw $t1, 0($t5)
    # %v16 = load i32, i32* %v3
    lw $t1, 0($t4)
    # %v17 = add i32 %v16, %v14
    addu $t1, $t1, $t3
    # store i32 %v17, i32* %v3
    sw $t1, 0($t4)
    # %v18 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
    la $k0, a
    addiu $t1, $k0, 8
    # %v19 = load i32, i32* %v18
    lw $t2, 0($t1)
    # %v20 = add i32 %v19, %v14
    addu $t2, $t2, $t3
    # store i32 %v20, i32* %v18
    sw $t2, 0($t1)
    # %v21 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
    addiu $t2, $k0, 12
    # %v22 = load i32, i32* %v21
    lw $t1, 0($t2)
    # %v23 = add i32 %v22, %v14
    addu $t1, $t1, $t3
    # store i32 %v23, i32* %v21
    sw $t1, 0($t2)
    # %v24 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
    addiu $t1, $k0, 16
    # %v25 = load i32, i32* %v24
    lw $t2, 0($t1)
    # %v26 = add i32 %v25, %v14
    addu $t2, $t2, $t3
    # store i32 %v26, i32* %v24
    sw $t2, 0($t1)
    # %v27 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
    addiu $t2, $k0, 20
    # %v28 = load i32, i32* %v27
    lw $t1, 0($t2)
    # %v29 = add i32 %v28, %v14
    addu $t1, $t1, $t3
    # store i32 %v29, i32* %v27
    sw $t1, 0($t2)
    # %v30 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
    addiu $t2, $k0, 24
    # %v31 = load i32, i32* %v30
    lw $t1, 0($t2)
    # %v32 = add i32 %v31, %v14
    addu $t1, $t1, $t3
    # store i32 %v32, i32* %v30
    sw $t1, 0($t2)
    # %v33 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
    addiu $t2, $k0, 28
    # %v34 = load i32, i32* %v33
    lw $t1, 0($t2)
    # %v35 = add i32 %v34, %v14
    addu $t1, $t1, $t3
    # store i32 %v35, i32* %v33
    sw $t1, 0($t2)
    # %v36 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
    addiu $t2, $k0, 32
    # %v37 = load i32, i32* %v36
    lw $t1, 0($t2)
    # %v38 = add i32 %v37, %v14
    addu $t1, $t1, $t3
    # store i32 %v38, i32* %v36
    sw $t1, 0($t2)
    # %v39 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
    addiu $t2, $k0, 36
    # %v40 = load i32, i32* %v39
    lw $t1, 0($t2)
    # %v41 = add i32 %v40, %v14
    addu $t1, $t1, $t3
    # store i32 %v41, i32* %v39
    sw $t1, 0($t2)
    # move 0 -> %v47
    li $t1, 0
    # br label %b48
    j main_bb48

main_bb43:
    # %v44 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %v47
    la $k0, a
    sll $k1, $t1, 2
    addu $t0, $k0, $k1
    # %v45 = load i32, i32* %v44
    lw $t0, 0($t0)
    # call void @putint(i32 %v45)
    move $a0, $t0
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
    la $a0, s0
    li $v0, 4
    syscall
    # %v46 = add i32 %v47, 1
    addiu $t0, $t1, 1
    # move %v46 -> %v47
    move $t1, $t0
    # br label %b48

main_bb48:
    # %v49 = icmp slt i32 %v47, 10
    # br i1 %v49, label %b43, label %b50
    blt $t1, 10, main_bb43

main_bb50:
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # call void @putint(i32 %v47)
    move $a0, $t1
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
    la $a0, s0
    li $v0, 4
    syscall
    # %v51 = call i32 @fib(i32 5)
    sw $t0, -4($sp)
    sw $ra, -8($sp)
    li $a1, 5
    addiu $sp, $sp, -8
    jal func_fib
    lw $ra, 0($sp)
    addiu $sp, $sp, 8
    lw $t0, -4($sp)
    move $t0, $v0
    # br label %b52

main_bb52:
    # %v53 = add i32 %v51, 2
    addiu $t0, $t0, 2
    # %v54 = call i32 @fib(i32 %v53)
    sw $t0, -4($sp)
    sw $ra, -8($sp)
    move $a1, $t0
    addiu $sp, $sp, -8
    jal func_fib
    lw $ra, 0($sp)
    addiu $sp, $sp, 8
    lw $t0, -4($sp)
    move $t0, $v0
    # br label %b55

main_bb55:
    # %v56 = sub i32 1197, %v54
    li $k1, 1197
    subu $t0, $k1, $t0
    # %v57 = add i32 %v56, -10091
    addiu $t0, $t0, -10091
    # call void @putint(i32 %v57)
    move $a0, $t0
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.s.2, i64 0, i64 0))
    la $a0, s2
    li $v0, 4
    syscall
    # ret i32 0
    li $v0, 10
    syscall

func_fib:
fib_bb1:
    # %v2 = icmp eq i32 %v0, 1
    # br i1 %v2, label %b3, label %b4
    bne $a1, 1, fib_bb4

fib_bb3:
    # ret i32 1
    li $v0, 1
    jr $ra

fib_bb4:
    # %v5 = icmp eq i32 %v0, 2
    # br i1 %v5, label %b14, label %b6
    beq $a1, 2, fib_bb14

fib_bb6:
    # %v7 = sub i32 %v0, 1
    addiu $t0, $a1, -1
    # %v8 = call i32 @fib(i32 %v7)
    sw $t1, -8($sp)
    sw $a1, -12($sp)
    sw $ra, -16($sp)
    move $a1, $t0
    addiu $sp, $sp, -16
    jal func_fib
    lw $ra, 0($sp)
    addiu $sp, $sp, 16
    lw $t1, -8($sp)
    lw $a1, -12($sp)
    move $t1, $v0
    # br label %b9

fib_bb9:
    # %v10 = sub i32 %v0, 2
    addiu $t0, $a1, -2
    # %v11 = call i32 @fib(i32 %v10)
    sw $t1, -8($sp)
    sw $t0, -12($sp)
    sw $a1, -16($sp)
    sw $ra, -20($sp)
    move $a1, $t0
    addiu $sp, $sp, -20
    jal func_fib
    lw $ra, 0($sp)
    addiu $sp, $sp, 20
    lw $t1, -8($sp)
    lw $t0, -12($sp)
    lw $a1, -16($sp)
    move $t0, $v0
    # br label %b12

fib_bb12:
    # %v13 = add i32 %v8, %v11
    addu $t0, $t1, $t0
    # ret i32 %v13
    move $v0, $t0
    jr $ra

fib_bb14:
    # ret i32 2
    li $v0, 2
    jr $ra

