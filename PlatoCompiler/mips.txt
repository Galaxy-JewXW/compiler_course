.data:
s0: .asciiz " "
s1: .asciiz "\n"
s2: .asciiz "END\n"

.text:
func_main:
main_bb0:
    # %v1 = alloca [13 x i8]
    addiu $t4, $sp, -52
    # %v2 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 0
    move $t2, $t4
    # store i8 72, i8* %v2
    li $k1, 72
    sw $k1, 0($t2)
    # %v3 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 1
    addiu $t1, $t4, 4
    # store i8 101, i8* %v3
    li $k1, 101
    sw $k1, 0($t1)
    # %v4 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 2
    addiu $t1, $t4, 8
    # store i8 108, i8* %v4
    li $k1, 108
    sw $k1, 0($t1)
    # %v5 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 3
    addiu $t1, $t4, 12
    # store i8 108, i8* %v5
    sw $k1, 0($t1)
    # %v6 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 4
    addiu $t1, $t4, 16
    # store i8 111, i8* %v6
    li $k1, 111
    sw $k1, 0($t1)
    # %v7 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 5
    addiu $t1, $t4, 20
    # store i8 0, i8* %v7
    li $k1, 0
    sw $k1, 0($t1)
    # %v8 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 6
    addiu $t1, $t4, 24
    # store i8 0, i8* %v8
    sw $k1, 0($t1)
    # %v9 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 7
    addiu $t1, $t4, 28
    # store i8 0, i8* %v9
    sw $k1, 0($t1)
    # %v10 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 8
    addiu $t1, $t4, 32
    # store i8 0, i8* %v10
    sw $k1, 0($t1)
    # %v11 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 9
    addiu $t1, $t4, 36
    # store i8 0, i8* %v11
    sw $k1, 0($t1)
    # %v12 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 10
    addiu $t1, $t4, 40
    # store i8 0, i8* %v12
    sw $k1, 0($t1)
    # %v13 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 11
    addiu $t1, $t4, 44
    # store i8 0, i8* %v13
    sw $k1, 0($t1)
    # %v14 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 12
    addiu $t1, $t4, 48
    # store i8 0, i8* %v14
    sw $k1, 0($t1)
    # %v15 = alloca [13 x i8]
    addiu $t4, $sp, -104
    # %v16 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 0
    move $t5, $t4
    # move 0 -> %v36
    li $t6, 0
    # br label %b35
    j main_bb35

main_bb18:
    # %v19 = load i8, i8* %v42
    lw $t6, 0($t6)
    # %v20 = getelementptr inbounds i8, i8* %v16, i32 %v43
    sll $k1, $t1, 2
    addu $t3, $t5, $k1
    # %v21 = load i8, i8* %v20
    lw $t7, 0($t3)
    # call void @putint(i32 %v19)
    move $a0, $t6
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
    li $v0, 11
    li $a0, 32
    syscall
    # call void @putint(i32 %v21)
    move $a0, $t7
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # store i8 %v19, i8* %v20
    sw $t6, 0($t3)
    # %v22 = add i32 %v43, 1
    addiu $t3, $t1, 1
    # move %v22 -> %v43
    move $t1, $t3
    # br label %b41
    j main_bb41

main_bb24:
    # %v25 = add i32 %v27, 1
    addiu $t0, $t1, 1
    # move %v25 -> %v27
    move $t1, $t0
    # br label %b27

main_bb27:
    # %v28 = getelementptr inbounds i8, i8* %v16, i32 %v27
    sll $k1, $t1, 2
    addu $t0, $t5, $k1
    # %v29 = load i8, i8* %v28
    lw $t0, 0($t0)
    # %v30 = icmp ne i32 %v29, 0
    # br i1 %v30, label %b24, label %b31
    bne $t0, 0, main_bb24

main_bb31:
    # call void @putint(i32 %v27)
    move $a0, $t1
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # ret i32 0
    li $v0, 10
    syscall

main_bb32:
    # %v33 = add i32 %v36, 1
    addiu $t6, $t6, 1
    # move %v33 -> %v36
    # br label %b35

main_bb35:
    # %v36 = getelementptr inbounds i8, i8* %v16, i32 %v36
    sll $k1, $t6, 2
    addu $t1, $t5, $k1
    # %v37 = load i8, i8* %v36
    lw $t1, 0($t1)
    # %v38 = icmp ne i32 %v37, 0
    # br i1 %v38, label %b32, label %b39
    bne $t1, 0, main_bb32

main_bb39:
    # call void @putint(i32 %v36)
    move $a0, $t6
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # move 0 -> %v43
    li $t1, 0
    # br label %b41

main_bb41:
    # %v42 = getelementptr inbounds i8, i8* %v2, i32 %v43
    sll $k1, $t1, 2
    addu $t6, $t2, $k1
    # %v43 = load i8, i8* %v42
    lw $t3, 0($t6)
    # %v44 = icmp ne i32 %v43, 0
    # br i1 %v44, label %b18, label %b45
    bne $t3, 0, main_bb18

main_bb45:
    # %v46 = getelementptr inbounds i8, i8* %v16, i32 %v43
    sll $k1, $t1, 2
    addu $t1, $t5, $k1
    # store i8 0, i8* %v46
    li $k1, 0
    sw $k1, 0($t1)
    # call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.s.2, i64 0, i64 0))
    la $a0, s2
    li $v0, 4
    syscall
    # %v47 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 2
    addiu $t1, $t4, 8
    # %v48 = load i8, i8* %v47
    lw $t1, 0($t1)
    # call void @putint(i32 %v48)
    move $a0, $t1
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # move 0 -> %v27
    li $t1, 0
    # br label %b27
    j main_bb27

