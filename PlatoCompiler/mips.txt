.data:
s0: .asciiz "print int : "
s1: .asciiz "\n"
s2: .asciiz "19373479\n"
s3: .asciiz "\nprint int : "
s4: .asciiz "\nprint int : "
s5: .asciiz "\nprint int : "
s6: .asciiz "\nprint int : "
s7: .asciiz "\nprint int : -45015\n"

.text:
func_main:
main_bb0:
    # call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.s.2, i64 0, i64 0))
    la $a0, s2
    li $v0, 4
    syscall
    # %v1 = call i32 @getint()
    li $v0, 5
    syscall
    move $s4, $v0
    # %v2 = call i32 @getint()
    li $v0, 5
    syscall
    move $s3, $v0
    # %v3 = call i32 @getint()
    li $v0, 5
    syscall
    move $t6, $v0
    # %v4 = call i32 @getint()
    li $v0, 5
    syscall
    sw $v0, -4($sp)
    # %v5 = icmp sgt i32 %v1, 5
    # br i1 %v5, label %b6, label %b8
    ble $s4, 5, main_bb8

main_bb6:
    # move 5 -> %v8
    li $s0, 5
    # br label %b10
    j main_bb10

main_bb8:
    # move %v1 -> %v8
    move $s0, $s4
    # br label %b10

main_bb10:
    # move %v4 -> %v88
    lw $s2, -4($sp)
    # move %v3 -> %v89
    move $t2, $t6
    # move %v2 -> %v90
    move $s4, $s3
    # move 10 -> %v91
    li $t8, 10
    # br label %b102
    j main_bb102

main_bb12:
    # move %v17 -> %v11
    move $t5, $t0
    # br label %b14

main_bb14:
    # move %v11 -> %v83
    move $t9, $t5
    # br label %b96
    j main_bb96

main_bb16:
    # %v17 = add i32 %v83, %v30
    addu $t0, $t9, $t1
    # %v18 = icmp eq i32 %v17, %v8
    # br i1 %v18, label %b27, label %b19
    beq $t0, $s0, main_bb27

main_bb19:
    # %v20 = icmp ne i32 %v17, %v55
    # br i1 %v20, label %b21, label %b12
    beq $t0, $t8, main_bb12

main_bb21:
    # %v22 = add i32 %v55, %v17
    addu $t4, $t8, $t0
    # move %v22 -> %v11
    move $t5, $t4
    # br label %b14
    j main_bb14

main_bb24:
    # %v25 = sub i32 0, %v39
    li $k1, 0
    subu $s5, $k1, $t1
    # move %v25 -> %v41
    move $t0, $s5
    # br label %b49
    j main_bb49

main_bb27:
    # move %v17 -> %v86
    move $s2, $t0
    # br label %b100
    j main_bb100

main_bb29:
    # %v30 = sub i32 %v91, 1
    addiu $t1, $t8, -1
    # %v31 = icmp sge i32 %v90, %v30
    # br i1 %v31, label %b32, label %b64
    blt $s4, $t1, main_bb64

main_bb32:
    # %v33 = add i32 %v30, 1
    addiu $t8, $t1, 1
    # %v34 = sdiv i32 %v90, %v33
    div $s4, $t8
    mflo $t8
    # %v35 = add i32 %v34, %v30
    addu $k0, $t8, $t1
    sw $k0, -8($sp)
    # move %v35 -> %v55
    lw $t8, -8($sp)
    # br label %b66
    j main_bb66

main_bb37:
    # call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
    la $a0, s0
    li $v0, 4
    syscall
    # call void @putint(i32 %v91)
    move $a0, $t8
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    la $a0, s1
    li $v0, 4
    syscall
    # br label %b38

main_bb38:
    # call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
    la $a0, s0
    li $v0, 4
    syscall
    # call void @putint(i32 %v8)
    move $a0, $s0
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.s.3, i64 0, i64 0))
    la $a0, s3
    li $v0, 4
    syscall
    # call void @putint(i32 %v90)
    move $a0, $s4
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.s.4, i64 0, i64 0))
    la $a0, s4
    li $v0, 4
    syscall
    # call void @putint(i32 %v89)
    move $a0, $t2
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.s.5, i64 0, i64 0))
    la $a0, s5
    li $v0, 4
    syscall
    # call void @putint(i32 %v88)
    move $a0, $s2
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
    la $a0, s1
    li $v0, 4
    syscall
    # %v39 = mul i32 %v88, %v89
    mul $t1, $s2, $t2
    # %v40 = icmp ne i32 %v89, 0
    # br i1 %v40, label %b71, label %b41
    bne $t2, 0, main_bb71

main_bb41:
    # %v42 = add i32 %v39, %v88
    addu $k0, $t1, $s2
    sw $k0, -12($sp)
    # %v43 = sdiv i32 %v88, 2
    sra $v0, $s2, 31
    srl $v0, $v0, 31
    addu $v1, $s2, $v0
    sra $k0, $v1, 1
    sw $k0, -16($sp)
    # move %v43 -> %v37
    lw $t2, -16($sp)
    # move %v42 -> %v38
    lw $t4, -12($sp)
    # br label %b45

main_bb45:
    # %v46 = icmp slt i32 %v39, 0
    # br i1 %v46, label %b24, label %b47
    blt $t1, 0, main_bb24

main_bb47:
    # move %v39 -> %v41
    move $t0, $t1
    # br label %b49

main_bb49:
    # %v50 = add i32 1, %v41
    addiu $t5, $t0, 1
    # %v51 = sub i32 %v38, %v39
    subu $t0, $t4, $t1
    # %v52 = add i32 %v51, %v37
    addu $t0, $t0, $t2
    # %v53 = mul i32 %v50, %v52
    mul $t2, $t5, $t0
    # %v54 = mul i32 %v90, 10
    sll $v0, $s4, 1
    sll $v1, $s4, 3
    addu $t1, $v0, $v1
    # %v55 = mul i32 %v53, %v54
    mul $t4, $t2, $t1
    # %v56 = icmp ne i32 %v54, 0
    # br i1 %v56, label %b76, label %b57
    bne $t1, 0, main_bb76

main_bb57:
    # %v58 = add i32 %v55, %v53
    addu $k0, $t4, $t2
    sw $k0, -20($sp)
    # %v59 = sdiv i32 %v53, 2
    sra $v0, $t2, 31
    srl $v0, $v0, 31
    addu $v1, $t2, $v0
    sra $k0, $v1, 1
    sw $k0, -24($sp)
    # move %v59 -> %v68
    lw $t1, -24($sp)
    # move %v58 -> %v69
    lw $t3, -20($sp)
    # br label %b81
    j main_bb81

main_bb61:
    # %v62 = mul i32 %v89, %v30
    mul $s6, $t2, $t1
    # move %v62 -> %v81
    move $t2, $s6
    # br label %b94
    j main_bb94

main_bb64:
    # move %v90 -> %v55
    move $t8, $s4
    # br label %b66

main_bb66:
    # %v67 = icmp sle i32 %v89, %v30
    # br i1 %v67, label %b61, label %b90
    ble $t2, $t1, main_bb61
    j main_bb90

main_bb68:
    # %v69 = sub i32 0, %v55
    li $k1, 0
    subu $k0, $k1, $t4
    sw $k0, -28($sp)
    # move %v69 -> %v72
    lw $t0, -28($sp)
    # br label %b85
    j main_bb85

main_bb71:
    # %v72 = srem i32 %v88, %v89
    div $s2, $t2
    mfhi $t0
    # %v73 = add i32 %v39, %v72
    addu $s7, $t1, $t0
    # %v74 = sdiv i32 %v88, %v89
    div $s2, $t2
    mflo $s1
    # move %v74 -> %v37
    move $t2, $s1
    # move %v73 -> %v38
    move $t4, $s7
    # br label %b45
    j main_bb45

main_bb76:
    # %v77 = srem i32 %v53, %v54
    div $t2, $t1
    mfhi $t0
    # %v78 = add i32 %v55, %v77
    addu $t3, $t4, $t0
    # %v79 = sdiv i32 %v53, %v54
    div $t2, $t1
    mflo $t7
    # move %v79 -> %v68
    move $t1, $t7
    # move %v78 -> %v69
    # br label %b81

main_bb81:
    # %v82 = icmp slt i32 %v55, 0
    # br i1 %v82, label %b68, label %b83
    blt $t4, 0, main_bb68

main_bb83:
    # move %v55 -> %v72
    move $t0, $t4
    # br label %b85

main_bb85:
    # call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
    la $a0, s0
    li $v0, 4
    syscall
    # call void @putint(i32 %v53)
    move $a0, $t2
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.s.6, i64 0, i64 0))
    la $a0, s6
    li $v0, 4
    syscall
    # %v86 = add i32 1, %v72
    addiu $t2, $t0, 1
    # %v87 = sub i32 %v69, %v55
    subu $t0, $t3, $t4
    # %v88 = add i32 %v87, %v68
    addu $t0, $t0, $t1
    # %v89 = mul i32 %v86, %v88
    mul $t0, $t2, $t0
    # call void @putint(i32 %v89)
    move $a0, $t0
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.s.7, i64 0, i64 0))
    la $a0, s7
    li $v0, 4
    syscall
    # ret i32 0
    li $v0, 10
    syscall

main_bb90:
    # %v91 = add i32 %v30, 3
    addiu $s4, $t1, 3
    # %v92 = srem i32 %v89, %v91
    div $t2, $s4
    mfhi $k0
    sw $k0, -32($sp)
    # move %v92 -> %v81
    lw $t2, -32($sp)
    # br label %b94

main_bb94:
    # move %v88 -> %v83
    move $t9, $s2
    # br label %b96

main_bb96:
    # %v97 = icmp slt i32 %v83, %v81
    # br i1 %v97, label %b16, label %b98
    blt $t9, $t2, main_bb16

main_bb98:
    # move %v83 -> %v86
    move $s2, $t9
    # br label %b100

main_bb100:
    # move %v86 -> %v88
    # move %v81 -> %v89
    # move %v55 -> %v90
    move $s4, $t8
    # move %v30 -> %v91
    move $t8, $t1
    # br label %b102

main_bb102:
    # %v103 = icmp ne i32 %v91, 0
    # br i1 %v103, label %b29, label %b104
    bne $t8, 0, main_bb29

main_bb104:
    # %v105 = icmp eq i32 0, %v91
    li $k0, 0
    seq $t0, $k0, $t8
    # %v106 = icmp ne i32 %v105, 0
    # br i1 %v106, label %b37, label %b38
    bne $t0, 0, main_bb37
    j main_bb38

