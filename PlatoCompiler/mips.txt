.data:
s0: .asciiz "\n"
s1: .asciiz "22372468\n"
s2: .asciiz " "
s3: .asciiz " a\n"
s4: .asciiz "\n2\n2\n"
a4: .byte 97, 98, 99, 100, 101, 0

.text:
func_main:
main_bb0:
    # call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.s.1, i64 0, i64 0))
    la $a0, s1
    li $v0, 4
    syscall
    # %v1 = call i32 @getint()
    li $v0, 5
    syscall
    move $t7, $v0
    # %v2 = call i32 @getchar()
    li $v0, 12
    syscall
    move $t6, $v0
    # call void @putint(i32 %v1)
    move $a0, $t7
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
    li $v0, 11
    li $a0, 32
    syscall
    # %v3 = trunc i32 %v2 to i8
    andi $t6, $t6, 255
    # call void @putch(i8 %v3)
    move $a0, $t6
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
    li $a0, 10
    syscall
    # move 0 -> %v32
    li $t6, 0
    # move 0 -> %v33
    li $s4, 0
    # br label %b39
    j main_bb39

main_bb5:
    # move %v54 -> %v64
    move $t5, $t2
    # br label %b71
    j main_bb71

main_bb7:
    # call void @putint(i32 %v62)
    move $a0, $t1
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # %v8 = mul i32 %v1, 10
    sll $v0, $t7, 1
    sll $v1, $t7, 3
    addu $t2, $v0, $v1
    # %v9 = sdiv i32 %v62, 2
    srl $v0, $t1, 31
    addu $t0, $t1, $v0
    sra $t0, $t0, 1
    # %v10 = add i32 %v8, %v9
    addu $t0, $t2, $t0
    # %v11 = sub i32 %v10, 1
    addiu $t1, $t0, -1
    # %v12 = sdiv i32 %v11, 7
    li $v0, 613566757
    mult $t1, $v0
    mfhi $v1
    sra $v0, $v1, 0
    srl $a0, $t1, 31
    addu $t0, $v0, $a0
    # %v13 = mul i32 %v12, 7
    sll $v0, $t0, 3
    subu $t0, $v0, $t0
    # %v14 = sub i32 %v11, %v13
    subu $t0, $t1, $t0
    # call void @putint(i32 %v14)
    move $a0, $t0
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.s.3, i64 0, i64 0))
    la $a0, s3
    li $v0, 4
    syscall
    # %v15 = getelementptr inbounds [6 x i8], [6 x i8]* @a4, i32 0, i32 0
    la $k0, a4
    move $t0, $k0
    # store i8 122, i8* %v15
    li $k1, 122
    sb $k1, 0($t0)
    # %v16 = getelementptr inbounds i8, i8* %v15, i32 0
    # %v17 = load i8, i8* %v16
    lb $t0, 0($t0)
    # call void @putch(i8 %v17)
    move $a0, $t0
    li $v0, 11
    syscall
    # call void @putstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.s.4, i64 0, i64 0))
    la $a0, s4
    li $v0, 4
    syscall
    # ret i32 0
    li $v0, 10
    syscall

main_bb18:
    # %v19 = add i32 %v28, 1
    addiu $t3, $t5, 1
    # %v20 = icmp sgt i32 %v19, 40
    # br i1 %v20, label %b23, label %b21
    bgt $t3, 40, main_bb23

main_bb21:
    # move %v19 -> %v28
    move $t5, $t3
    # br label %b34
    j main_bb34

main_bb23:
    # move %v19 -> %v30
    # br label %b37
    j main_bb37

main_bb25:
    # %v26 = add i32 %v38, %v37
    addu $s0, $s1, $t6
    # %v27 = add i32 %v37, 1
    addiu $s3, $t6, 1
    # move %v27 -> %v37
    move $t6, $s3
    # move %v26 -> %v38
    move $s1, $s0
    # br label %b43
    j main_bb43

main_bb29:
    # call void @putint(i32 %v65)
    move $a0, $t0
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # move %v65 -> %v54
    move $t1, $t0
    # br label %b61
    j main_bb61

main_bb31:
    # %v32 = icmp slt i32 %v70, 5
    # move %v78 -> %v28
    move $t5, $s2
    # br label %b34

main_bb34:
    # br i1 %v32, label %b18, label %b35
    blt $t2, 5, main_bb18

main_bb35:
    # move %v28 -> %v30
    move $t3, $t5
    # br label %b37

main_bb37:
    # move %v30 -> %v58
    move $t0, $t3
    # br label %b64
    j main_bb64

main_bb39:
    # %v40 = icmp slt i32 %v32, 5
    # br i1 %v40, label %b49, label %b41
    blt $t6, 5, main_bb49

main_bb41:
    # call void @putint(i32 %v33)
    move $a0, $s4
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # move 0 -> %v37
    li $t6, 0
    # move %v33 -> %v38
    move $s1, $s4
    # br label %b43

main_bb43:
    # %v44 = icmp slt i32 %v37, 5
    # br i1 %v44, label %b25, label %b45
    blt $t6, 5, main_bb25

main_bb45:
    # move 0 -> %v46
    li $s0, 0
    # move %v38 -> %v47
    move $t2, $s1
    # br label %b53
    j main_bb53

main_bb47:
    # call void @putint(i32 %v72)
    move $a0, $t5
    li $v0, 1
    syscall
    # call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
    li $v0, 11
    li $a0, 10
    syscall
    # move 0 -> %v70
    li $t2, 0
    # move %v72 -> %v71
    move $t4, $t5
    # br label %b77
    j main_bb77

main_bb49:
    # %v50 = add i32 %v33, %v32
    addu $s1, $s4, $t6
    # %v51 = add i32 %v32, 1
    addiu $s4, $t6, 1
    # move %v51 -> %v32
    move $t6, $s4
    # move %v50 -> %v33
    move $s4, $s1
    # br label %b39
    j main_bb39

main_bb53:
    # %v54 = add i32 %v47, %v46
    addu $t2, $t2, $s0
    # %v55 = icmp sgt i32 %v54, 25
    # br i1 %v55, label %b5, label %b56
    bgt $t2, 25, main_bb5

main_bb56:
    # %v57 = add i32 %v46, 1
    addiu $s5, $s0, 1
    # move %v57 -> %v46
    move $s0, $s5
    # move %v54 -> %v47
    # br label %b53
    j main_bb53

main_bb59:
    # move %v62 -> %v54
    # br label %b61

main_bb61:
    # %v62 = add i32 %v54, 2
    addiu $t1, $t1, 2
    # %v63 = icmp sgt i32 %v62, 50
    # br i1 %v63, label %b7, label %b59
    bgt $t1, 50, main_bb7
    j main_bb59

main_bb64:
    # %v65 = add i32 %v58, 1
    addiu $t0, $t0, 1
    # %v66 = icmp sgt i32 %v65, 45
    # br i1 %v66, label %b29, label %b67
    bgt $t0, 45, main_bb29

main_bb67:
    # move %v65 -> %v58
    # br label %b64
    j main_bb64

main_bb69:
    # move %v72 -> %v64
    # br label %b71

main_bb71:
    # %v72 = add i32 %v64, 1
    addiu $t5, $t5, 1
    # %v73 = icmp sgt i32 %v72, 30
    # br i1 %v73, label %b47, label %b69
    bgt $t5, 30, main_bb47
    j main_bb69

main_bb74:
    # %v75 = add i32 %v70, 1
    addiu $t4, $t2, 1
    # move %v75 -> %v70
    move $t2, $t4
    # move %v78 -> %v71
    move $t4, $s2
    # br label %b77

main_bb77:
    # %v78 = add i32 %v71, %v70
    addu $s2, $t4, $t2
    # %v79 = icmp sgt i32 %v78, 35
    # br i1 %v79, label %b31, label %b74
    bgt $s2, 35, main_bb31
    j main_bb74

