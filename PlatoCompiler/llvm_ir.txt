declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1



define dso_local i32 @sum(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) {
7:
	%8 = alloca i32
	store i32 %0, i32* %8
	%9 = alloca i32
	store i32 %1, i32* %9
	%10 = alloca i32
	store i32 %2, i32* %10
	%11 = alloca i32
	store i32 %3, i32* %11
	%12 = alloca i32
	store i32 %4, i32* %12
	%13 = alloca i32
	store i32 %5, i32* %13
	%14 = alloca i32
	store i32 %6, i32* %14
	%15 = load i32, i32* %8
	%16 = load i32, i32* %9
	%17 = add i32 %15, %16
	%18 = load i32, i32* %10
	%19 = add i32 %17, %18
	%20 = load i32, i32* %11
	%21 = add i32 %19, %20
	%22 = load i32, i32* %12
	%23 = add i32 %21, %22
	%24 = load i32, i32* %13
	%25 = add i32 %23, %24
	%26 = load i32, i32* %14
	%27 = add i32 %25, %26
	ret i32 %27
}

define dso_local i32 @main() {
0:
	%1 = sub i32 0, 3
	%2 = call i32 @sum(i32 1, i32 9, i32 7, i32 %1, i32 2, i32 3, i32 4)
	call void @putint(i32 %2)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	ret i32 0
}
