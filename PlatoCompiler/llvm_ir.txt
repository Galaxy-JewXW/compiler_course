declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.2 = private unnamed_addr constant [5 x i8] c"END\0A\00", align 1

@global_length = dso_local global i32 0
@global_buffer = dso_local global [100 x i8] zeroinitializer

define dso_local i32 @my_strlen(i8* %v0) {
b1:
	%v2 = alloca i32
	store i32 0, i32* %v2
	store i32 0, i32* %v2
	br label %b3
b3:
	%v4 = load i32, i32* %v2
	%v5 = getelementptr inbounds i8, i8* %v0, i32 %v4
	%v6 = load i8, i8* %v5
	%v7 = zext i8 %v6 to i32
	%v8 = icmp ne i32 %v7, 0
	br i1 %v8, label %b9, label %b13
b9:
	br label %b10
b10:
	%v11 = load i32, i32* %v2
	%v12 = add i32 %v11, 1
	store i32 %v12, i32* %v2
	br label %b3
b13:
	%v14 = load i32, i32* %v2
	ret i32 %v14
}

define dso_local void @my_strcpy(i8* %v0, i8* %v1) {
b2:
	%v3 = alloca i32
	store i32 0, i32* %v3
	store i32 0, i32* %v3
	br label %b4
b4:
	%v5 = load i32, i32* %v3
	%v6 = getelementptr inbounds i8, i8* %v1, i32 %v5
	%v7 = load i8, i8* %v6
	%v8 = zext i8 %v7 to i32
	%v9 = icmp ne i32 %v8, 0
	br i1 %v9, label %b10, label %b27
b10:
	%v11 = load i32, i32* %v3
	%v12 = getelementptr inbounds i8, i8* %v1, i32 %v11
	%v13 = load i8, i8* %v12
	%v14 = load i32, i32* %v3
	%v15 = getelementptr inbounds i8, i8* %v0, i32 %v14
	%v16 = load i8, i8* %v15
	%v17 = zext i8 %v13 to i32
	call void @putint(i32 %v17)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	%v18 = zext i8 %v16 to i32
	call void @putint(i32 %v18)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	%v19 = load i32, i32* %v3
	%v20 = getelementptr inbounds i8, i8* %v0, i32 %v19
	%v21 = load i32, i32* %v3
	%v22 = getelementptr inbounds i8, i8* %v1, i32 %v21
	%v23 = load i8, i8* %v22
	store i8 %v23, i8* %v20
	br label %b24
b24:
	%v25 = load i32, i32* %v3
	%v26 = add i32 %v25, 1
	store i32 %v26, i32* %v3
	br label %b4
b27:
	%v28 = load i32, i32* %v3
	%v29 = getelementptr inbounds i8, i8* %v0, i32 %v28
	store i8 0, i8* %v29
	call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.s.2, i64 0, i64 0))
	ret void
}

define dso_local i32 @main() {
b0:
	%v1 = alloca [13 x i8]
	%v2 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 0
	store i8 72, i8* %v2
	%v3 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 1
	store i8 101, i8* %v3
	%v4 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 2
	store i8 108, i8* %v4
	%v5 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 3
	store i8 108, i8* %v5
	%v6 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 4
	store i8 111, i8* %v6
	%v7 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 5
	store i8 0, i8* %v7
	%v8 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 6
	store i8 0, i8* %v8
	%v9 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 7
	store i8 0, i8* %v9
	%v10 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 8
	store i8 0, i8* %v10
	%v11 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 9
	store i8 0, i8* %v11
	%v12 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 10
	store i8 0, i8* %v12
	%v13 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 11
	store i8 0, i8* %v13
	%v14 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 12
	store i8 0, i8* %v14
	%v15 = alloca [13 x i8]
	%v16 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 0
	store i8 87, i8* %v16
	%v17 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 1
	store i8 111, i8* %v17
	%v18 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 2
	store i8 114, i8* %v18
	%v19 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 3
	store i8 108, i8* %v19
	%v20 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 4
	store i8 100, i8* %v20
	%v21 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 5
	store i8 0, i8* %v21
	%v22 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 6
	store i8 0, i8* %v22
	%v23 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 7
	store i8 0, i8* %v23
	%v24 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 8
	store i8 0, i8* %v24
	%v25 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 9
	store i8 0, i8* %v25
	%v26 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 10
	store i8 0, i8* %v26
	%v27 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 11
	store i8 0, i8* %v27
	%v28 = getelementptr inbounds [13 x i8], [13 x i8]* %v15, i32 0, i32 12
	store i8 0, i8* %v28
	%v29 = alloca [13 x i8]
	%v30 = alloca i32
	%v31 = getelementptr inbounds [13 x i8], [13 x i8]* %v29, i32 0, i32 0
	%v32 = call i32 @my_strlen(i8* %v31)
	call void @putint(i32 %v32)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	%v33 = getelementptr inbounds [13 x i8], [13 x i8]* %v29, i32 0, i32 0
	%v34 = getelementptr inbounds [13 x i8], [13 x i8]* %v1, i32 0, i32 0
	call void @my_strcpy(i8* %v33, i8* %v34)
	%v35 = getelementptr inbounds [13 x i8], [13 x i8]* %v29, i32 0, i32 2
	%v36 = load i8, i8* %v35
	%v37 = zext i8 %v36 to i32
	call void @putint(i32 %v37)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	%v38 = getelementptr inbounds [13 x i8], [13 x i8]* %v29, i32 0, i32 0
	%v39 = call i32 @my_strlen(i8* %v38)
	call void @putint(i32 %v39)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 0
}
