declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)



@x = dso_local global i32 0

define dso_local void @f3(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	store i32 %3, i32* @x
	ret void
}

define dso_local i32 @f4(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = icmp sgt i32 %3, 0
	br i1 %4, label %5, label %7
5:
	%6 = load i32, i32* %2
	ret i32 %6
	br label %7
7:
	%8 = load i32, i32* %2
	%9 = sub i32 0, %8
	ret i32 %9
}

define dso_local i32 @main() {
0:
	%1 = sub i32 0, 1
	store i32 %1, i32* @x
	%2 = alloca i32
	%3 = alloca i32
	store i32 5, i32* %3
	%4 = alloca i32
	store i32 0, i32* %2
	br label %5
5:
	%6 = load i32, i32* %2
	%7 = load i32, i32* %2
	%8 = mul i32 %6, %7
	%9 = load i32, i32* %3
	%10 = load i32, i32* %3
	%11 = mul i32 %9, %10
	%12 = sub i32 5, 4
	%13 = sdiv i32 %11, %12
	%14 = icmp slt i32 %8, %13
	br i1 %14, label %15, label %24
15:
	%16 = call i32 @getint()
	store i32 %16, i32* %4
	%17 = load i32, i32* %4
	%18 = call i32 @f4(i32 %17)
	call void @f3(i32 %18)
	%19 = load i32, i32* @x
	%20 = icmp slt i32 %19, 0
	br i1 %20, label %25, label %26
21:
	%22 = load i32, i32* %2
	%23 = add i32 %22, 1
	store i32 %23, i32* %2
	br label %5
24:
	ret i32 0
25:
	br label %24
	br label %26
26:
	%27 = load i32, i32* @x
	%28 = icmp sgt i32 %27, 0
	br i1 %28, label %29, label %30
29:
	br label %21
	br label %30
30:
	%31 = load i32, i32* %2
	%32 = add i32 %31, 1
	store i32 %32, i32* %2
	br label %21
}
