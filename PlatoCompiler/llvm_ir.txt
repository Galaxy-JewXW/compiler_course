declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [13 x i8] c"print int : \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.2 = private unnamed_addr constant [10 x i8] c"19373479\0A\00", align 1
@.s.3 = private unnamed_addr constant [4 x i8] c"a: \00", align 1
@.s.4 = private unnamed_addr constant [4 x i8] c"c: \00", align 1
@.s.5 = private unnamed_addr constant [5 x i8] c"d1: \00", align 1
@.s.6 = private unnamed_addr constant [5 x i8] c"d2: \00", align 1
@.s.7 = private unnamed_addr constant [5 x i8] c"e1: \00", align 1
@.s.8 = private unnamed_addr constant [7 x i8] c"break\0A\00", align 1
@.s.9 = private unnamed_addr constant [5 x i8] c"e2: \00", align 1



define dso_local void @printInt(i32 %v0) {
b1:
	%v2 = alloca i32
	store i32 %v0, i32* %v2
	%v3 = load i32, i32* %v2
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %v3)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret void
}

define dso_local i32 @main() {
b0:
	call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.s.2, i64 0, i64 0))
	%v1 = alloca i32
	store i32 10, i32* %v1
	%v2 = alloca i32
	%v3 = alloca i32
	%v4 = alloca i32
	%v5 = alloca i32
	store i32 2, i32* %v2
	store i32 3, i32* %v3
	store i32 4, i32* %v4
	store i32 5, i32* %v5
	br label %b6
b6:
	%v7 = load i32, i32* %v1
	%v8 = icmp ne i32 %v7, 0
	br i1 %v8, label %b9, label %b17
b9:
	%v10 = load i32, i32* %v1
	%v11 = sub i32 %v10, 1
	store i32 %v11, i32* %v1
	%v12 = load i32, i32* %v1
	call void @putstr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.s.3, i64 0, i64 0))
	call void @putint(i32 %v12)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	%v13 = load i32, i32* %v3
	%v14 = load i32, i32* %v1
	%v15 = icmp sge i32 %v13, %v14
	br i1 %v15, label %b22, label %b30
b16:
	br label %b6
b17:
	%v18 = load i32, i32* %v1
	%v19 = icmp eq i32 0, %v18
	%v20 = zext i1 %v19 to i32
	%v21 = icmp ne i32 %v20, 0
	br i1 %v21, label %b71, label %b73
b22:
	%v23 = load i32, i32* %v3
	%v24 = load i32, i32* %v1
	%v25 = add i32 %v24, 1
	%v26 = sdiv i32 %v23, %v25
	%v27 = load i32, i32* %v1
	%v28 = add i32 %v26, %v27
	store i32 %v28, i32* %v3
	%v29 = load i32, i32* %v3
	call void @putstr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.s.4, i64 0, i64 0))
	call void @putint(i32 %v29)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %b30
b30:
	%v31 = load i32, i32* %v4
	%v32 = load i32, i32* %v1
	%v33 = icmp sle i32 %v31, %v32
	br i1 %v33, label %b34, label %b39
b34:
	%v35 = load i32, i32* %v4
	%v36 = load i32, i32* %v1
	%v37 = mul i32 %v35, %v36
	store i32 %v37, i32* %v4
	%v38 = load i32, i32* %v4
	call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.s.5, i64 0, i64 0))
	call void @putint(i32 %v38)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %b45
b39:
	%v40 = load i32, i32* %v4
	%v41 = load i32, i32* %v1
	%v42 = add i32 %v41, 3
	%v43 = srem i32 %v40, %v42
	store i32 %v43, i32* %v4
	%v44 = load i32, i32* %v4
	call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.s.6, i64 0, i64 0))
	call void @putint(i32 %v44)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %b45
b45:
	br label %b46
b46:
	%v47 = load i32, i32* %v5
	%v48 = load i32, i32* %v4
	%v49 = icmp slt i32 %v47, %v48
	br i1 %v49, label %b50, label %b59
b50:
	%v51 = load i32, i32* %v5
	%v52 = load i32, i32* %v1
	%v53 = add i32 %v51, %v52
	store i32 %v53, i32* %v5
	%v54 = load i32, i32* %v5
	call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.s.7, i64 0, i64 0))
	call void @putint(i32 %v54)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	%v55 = load i32, i32* %v5
	%v56 = load i32, i32* %v2
	%v57 = icmp eq i32 %v55, %v56
	br i1 %v57, label %b60, label %b61
b58:
	br label %b46
b59:
	br label %b16
b60:
	call void @putstr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.s.8, i64 0, i64 0))
	br label %b59
	br label %b61
b61:
	%v62 = load i32, i32* %v5
	%v63 = load i32, i32* %v3
	%v64 = icmp ne i32 %v62, %v63
	br i1 %v64, label %b65, label %b70
b65:
	%v66 = load i32, i32* %v3
	%v67 = load i32, i32* %v5
	%v68 = add i32 %v66, %v67
	store i32 %v68, i32* %v5
	%v69 = load i32, i32* %v5
	call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.s.9, i64 0, i64 0))
	call void @putint(i32 %v69)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	br label %b58
	br label %b70
b70:
	br label %b58
b71:
	%v72 = load i32, i32* %v1
	call void @printInt(i32 %v72)
	br label %b73
b73:
	%v74 = load i32, i32* %v2
	call void @printInt(i32 %v74)
	%v75 = load i32, i32* %v3
	call void @printInt(i32 %v75)
	%v76 = load i32, i32* %v4
	call void @printInt(i32 %v76)
	%v77 = load i32, i32* %v5
	call void @printInt(i32 %v77)
	ret i32 0
}
