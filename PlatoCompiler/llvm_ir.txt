declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.1 = private unnamed_addr constant [9 x i8] c"Tody is \00", align 1
@.s.2 = private unnamed_addr constant [2 x i8] c"-\00", align 1

@year = dso_local global i32 2024
@month = dso_local global i32 9
@day = dso_local global i32 0

define dso_local i32 @getDay() {
0:
	%1 = alloca i32
	%2 = call i32 @getint()
	store i32 %2, i32* %1
	%3 = load i32, i32* %1
	ret i32 %3
}

define dso_local void @putString(i8* %0, i32 %1) {
2:
	%3 = alloca i32
	store i32 %1, i32* %3
	%4 = alloca i32
	store i32 0, i32* %4
	br label %5
5:
	%6 = load i32, i32* %4
	%7 = getelementptr inbounds i8, i8* %0, i32 %6
	%8 = load i8, i8* %7
	%9 = zext i8 %8 to i32
	%10 = trunc i32 %9 to i8
	call void @putch(i8 %10)
	br label %11
11:
	%12 = load i32, i32* %4
	%13 = add i32 %12, 1
	store i32 %13, i32* %4
	br label %14
14:
	%15 = load i32, i32* %4
	%16 = load i32, i32* %3
	%17 = icmp slt i32 %15, %16
	br i1 %17, label %5, label %18
18:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	ret void
}

define dso_local i32 @strlen(i8* %0) {
1:
	%2 = alloca i32
	store i32 0, i32* %2
	br label %3
3:
	br label %4
4:
	%5 = load i32, i32* %2
	%6 = add i32 %5, 1
	store i32 %6, i32* %2
	br label %7
7:
	%8 = load i32, i32* %2
	%9 = getelementptr inbounds i8, i8* %0, i32 %8
	%10 = load i8, i8* %9
	%11 = zext i8 %10 to i32
	%12 = icmp ne i32 %11, 0
	br i1 %12, label %3, label %13
13:
	%14 = load i32, i32* %2
	ret i32 %14
}

define dso_local i8 @charAt(i8* %0, i32 %1) {
2:
	%3 = alloca i32
	store i32 %1, i32* %3
	%4 = load i32, i32* %3
	%5 = getelementptr inbounds i8, i8* %0, i32 %4
	%6 = load i8, i8* %5
	%7 = zext i8 %6 to i32
	ret i32 %7
}

define dso_local i32 @main() {
0:
	%1 = call i32 @getDay()
	store i32 %1, i32* @day
	%2 = load i32, i32* @year
	%3 = load i32, i32* @month
	%4 = load i32, i32* @day
	call void @putstr(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %2)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
	call void @putint(i32 %3)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
	call void @putint(i32 %4)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	%5 = alloca [12 x i8]
	%6 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 0
	store i8 104, i8* %6
	%7 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 1
	store i8 101, i8* %7
	%8 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 2
	store i8 108, i8* %8
	%9 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 3
	store i8 108, i8* %9
	%10 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 4
	store i8 111, i8* %10
	%11 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 5
	store i8 32, i8* %11
	%12 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 6
	store i8 119, i8* %12
	%13 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 7
	store i8 111, i8* %13
	%14 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 8
	store i8 114, i8* %14
	%15 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 9
	store i8 108, i8* %15
	%16 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 10
	store i8 100, i8* %16
	%17 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 11
	store i8 0, i8* %17
	%18 = alloca i32
	%19 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 0
	%20 = call i32 @strlen(i8* %19)
	store i32 %20, i32* %18
	%21 = load i32, i32* %18
	%22 = icmp sgt i32 %21, 4
	br i1 %22, label %23, label %29
23:
	%24 = alloca i8
	%25 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i32 0, i32 0
	%26 = call i8 @charAt(i8* %25, i32 4)
	%27 = zext i8 %26 to i32
	%28 = trunc i32 %27 to i8
	store i8 %28, i8* %24
	br label %29
29:
	ret i32 0
}
