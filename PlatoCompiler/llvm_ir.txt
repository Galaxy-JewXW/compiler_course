declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = constant [2 x i8] c"\0A\00"



define dso_local i32 @main() {
0:
	%1 = alloca i32
	%2 = alloca i32
	store i32* %2, i32 4
	%3 = load i32, i32* %2
	%4 = icmp slt i32 3, %3
	%5 = zext i1 %4 to i32
	%6 = icmp eq i32 3, %5
	%7 = zext i1 %6 to i32
	%8 = icmp sgt i32 1, 9
	%9 = zext i1 %8 to i32
	%10 = icmp eq i32 %7, %9
	%11 = zext i1 %10 to i32
	%12 = load i32, i32* %2
	%13 = add i32 %12, 1
	%14 = icmp eq i32 %11, %13
	br i1 %14, label %15, label %16
15:
	store i32* %1, i32 1
	br label %17
16:
	store i32* %1, i32 9
	br label %17
17:
	%18 = load i32, i32* %2
	call void @putint(i32 %18)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	ret i32 0
}
