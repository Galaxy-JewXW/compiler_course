declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.1 = private unnamed_addr constant [10 x i8] c"22372468\0A\00", align 1
@.s.2 = private unnamed_addr constant [2 x i8] c" \00", align 1

@constA = dso_local constant i32 1
@constB = dso_local constant i32 2
@constC = dso_local constant i32 3
@constD = dso_local constant [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5]
@a1 = dso_local global i8 97
@a2 = dso_local global i8 98
@a3 = dso_local global i8 99
@a4 = dso_local global [6 x i8] [i8 97, i8 98, i8 99, i8 100, i8 101, i8 0]

define dso_local void @funcA() {
b0:
	ret void
}

define dso_local i32 @funcB() {
b0:
	%v1 = alloca i32
	store i32 0, i32* %v1
	%v2 = alloca i32
	store i32 0, i32* %v2
	store i32 0, i32* %v2
	br label %b3
b3:
	%v4 = load i32, i32* %v2
	%v5 = icmp slt i32 %v4, 5
	br i1 %v5, label %b6, label %b13
b6:
	%v7 = load i32, i32* %v1
	%v8 = load i32, i32* %v2
	%v9 = add i32 %v7, %v8
	store i32 %v9, i32* %v1
	br label %b10
b10:
	%v11 = load i32, i32* %v2
	%v12 = add i32 %v11, 1
	store i32 %v12, i32* %v2
	br label %b3
b13:
	%v14 = load i32, i32* %v1
	call void @putint(i32 %v14)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	store i32 0, i32* %v2
	br label %b15
b15:
	%v16 = load i32, i32* %v2
	%v17 = icmp slt i32 %v16, 5
	br i1 %v17, label %b18, label %b25
b18:
	%v19 = load i32, i32* %v1
	%v20 = load i32, i32* %v2
	%v21 = add i32 %v19, %v20
	store i32 %v21, i32* %v1
	br label %b22
b22:
	%v23 = load i32, i32* %v2
	%v24 = add i32 %v23, 1
	store i32 %v24, i32* %v2
	br label %b15
b25:
	store i32 0, i32* %v2
	br label %b26
b26:
	br label %b27
b27:
	%v28 = load i32, i32* %v1
	%v29 = load i32, i32* %v2
	%v30 = add i32 %v28, %v29
	store i32 %v30, i32* %v1
	%v31 = load i32, i32* %v1
	%v32 = icmp sgt i32 %v31, 25
	br i1 %v32, label %b37, label %b38
b33:
	%v34 = load i32, i32* %v2
	%v35 = add i32 %v34, 1
	store i32 %v35, i32* %v2
	br label %b26
b36:
	store i32 1, i32* %v2
	br label %b40
b37:
	br label %b36
	br label %b39
b38:
	br label %b33
	br label %b39
b39:
	br label %b33
b40:
	%v41 = load i32, i32* %v2
	%v42 = icmp slt i32 %v41, 5
	br i1 %v42, label %b43, label %b50
b43:
	%v44 = load i32, i32* %v1
	%v45 = load i32, i32* %v2
	%v46 = add i32 %v44, %v45
	store i32 %v46, i32* %v1
	%v47 = load i32, i32* %v1
	%v48 = icmp sgt i32 %v47, 30
	br i1 %v48, label %b52, label %b53
b49:
	br label %b40
b50:
	%v51 = load i32, i32* %v1
	call void @putint(i32 %v51)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	store i32 0, i32* %v2
	br label %b54
b52:
	br label %b50
	br label %b53
b53:
	br label %b49
b54:
	br label %b55
b55:
	%v56 = load i32, i32* %v1
	%v57 = load i32, i32* %v2
	%v58 = add i32 %v56, %v57
	store i32 %v58, i32* %v1
	%v59 = load i32, i32* %v1
	%v60 = icmp sgt i32 %v59, 35
	br i1 %v60, label %b65, label %b66
b61:
	%v62 = load i32, i32* %v2
	%v63 = add i32 %v62, 1
	store i32 %v63, i32* %v2
	br label %b54
b64:
	br label %b67
b65:
	br label %b64
	br label %b66
b66:
	br label %b61
b67:
	%v68 = load i32, i32* %v2
	%v69 = icmp slt i32 %v68, 5
	br i1 %v69, label %b70, label %b76
b70:
	%v71 = load i32, i32* %v1
	%v72 = add i32 %v71, 1
	store i32 %v72, i32* %v1
	%v73 = load i32, i32* %v1
	%v74 = icmp sgt i32 %v73, 40
	br i1 %v74, label %b77, label %b78
b75:
	br label %b67
b76:
	store i32 1, i32* %v2
	br label %b79
b77:
	br label %b76
	br label %b78
b78:
	br label %b75
b79:
	br label %b80
b80:
	%v81 = load i32, i32* %v1
	%v82 = load i32, i32* %v2
	%v83 = add i32 %v81, %v82
	store i32 %v83, i32* %v1
	%v84 = load i32, i32* %v1
	%v85 = icmp sgt i32 %v84, 45
	br i1 %v85, label %b89, label %b90
b86:
	br label %b79
b87:
	%v88 = load i32, i32* %v1
	call void @putint(i32 %v88)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	br label %b91
b89:
	br label %b87
	br label %b90
b90:
	br label %b86
b91:
	br label %b92
b92:
	%v93 = load i32, i32* %v1
	%v94 = add i32 %v93, 2
	store i32 %v94, i32* %v1
	%v95 = load i32, i32* %v1
	%v96 = icmp sgt i32 %v95, 50
	br i1 %v96, label %b101, label %b102
b97:
	br label %b91
b98:
	%v99 = load i32, i32* %v1
	call void @putint(i32 %v99)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	%v100 = load i32, i32* %v1
	ret i32 %v100
b101:
	br label %b98
	br label %b102
b102:
	br label %b97
}

define dso_local i8 @funcC() {
b0:
	%v1 = alloca i8
	store i8 0, i8* %v1
	%v2 = load i32, i32* @constB
	%v3 = load i32, i32* @constA
	%v4 = add i32 %v3, 1
	%v5 = icmp sge i32 %v2, %v4
	br i1 %v5, label %b6, label %b11
b6:
	%v7 = load i32, i32* @constC
	%v8 = load i32, i32* @constB
	%v9 = add i32 %v8, 1
	%v10 = icmp sge i32 %v7, %v9
	br i1 %v10, label %b16, label %b18
b11:
	%v12 = load i8, i8* @a2
	store i8 %v12, i8* %v1
	br label %b13
b13:
	%v14 = load i32, i32* @constC
	%v15 = icmp ne i32 %v14, 3
	br i1 %v15, label %b19, label %b22
b16:
	%v17 = load i8, i8* @a1
	store i8 %v17, i8* %v1
	br label %b18
b18:
	br label %b13
b19:
	%v20 = load i32, i32* @constB
	%v21 = icmp slt i32 %v20, 3
	br i1 %v21, label %b24, label %b26
b22:
	%v23 = load i8, i8* %v1
	ret i8 %v23
b24:
	%v25 = load i8, i8* @a3
	store i8 %v25, i8* %v1
	br label %b26
b26:
	br label %b22
}

define dso_local void @funcD(i8* %v0) {
b1:
	%v2 = getelementptr inbounds i8, i8* %v0, i32 0
	%v3 = load i8, i8* %v2
	call void @putch(i8 %v3)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	ret void
}

define dso_local void @funcE(i32 %v0, i32 %v1) {
b2:
	%v3 = alloca i32
	store i32 %v0, i32* %v3
	%v4 = alloca i32
	store i32 %v1, i32* %v4
	%v5 = load i32, i32* %v3
	%v6 = load i32, i32* %v4
	%v7 = icmp eq i32 %v5, %v6
	br i1 %v7, label %b8, label %b12
b8:
	%v9 = load i32, i32* %v3
	%v10 = load i32, i32* %v4
	%v11 = add i32 %v9, %v10
	call void @putint(i32 %v11)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	br label %b12
b12:
	%v13 = load i32, i32* %v3
	%v14 = load i32, i32* %v4
	%v15 = icmp ne i32 %v13, %v14
	br i1 %v15, label %b16, label %b20
b16:
	%v17 = load i32, i32* %v3
	%v18 = load i32, i32* %v4
	%v19 = mul i32 %v17, %v18
	call void @putint(i32 %v19)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	br label %b20
b20:
	ret void
}

define dso_local i32 @main() {
b0:
	call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.s.1, i64 0, i64 0))
	%v1 = alloca i32
	store i32 0, i32* %v1
	%v2 = alloca i8
	store i8 0, i8* %v2
	%v3 = call i32 @getint()
	store i32 %v3, i32* %v1
	%v4 = call i32 @getchar()
	%v5 = trunc i32 %v4 to i8
	store i8 %v5, i8* %v2
	%v6 = load i32, i32* %v1
	%v7 = load i8, i8* %v2
	call void @putint(i32 %v6)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
	call void @putch(i8 %v7)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	call void @funcA()
	%v8 = alloca i32
	%v9 = load i32, i32* %v1
	%v10 = mul i32 %v9, 10
	%v11 = call i32 @funcB()
	%v12 = sdiv i32 %v11, 2
	%v13 = add i32 %v10, %v12
	%v14 = sub i32 %v13, 1
	%v15 = srem i32 %v14, 7
	store i32 %v15, i32* %v8
	%v16 = alloca i8
	%v17 = call i8 @funcC()
	store i8 %v17, i8* %v16
	%v18 = load i32, i32* %v8
	%v19 = load i8, i8* %v16
	call void @putint(i32 %v18)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
	call void @putch(i8 %v19)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	%v20 = getelementptr inbounds [6 x i8], [6 x i8]* @a4, i32 0, i32 0
	store i8 122, i8* %v20
	%v21 = getelementptr inbounds [6 x i8], [6 x i8]* @a4, i32 0, i32 0
	call void @funcD(i8* %v21)
	%v22 = load i32, i32* @constA
	%v23 = load i32, i32* @constB
	call void @funcE(i32 %v22, i32 %v23)
	%v24 = load i32, i32* @constA
	%v25 = load i32, i32* @constB
	call void @funcE(i32 %v24, i32 %v25)
	ret i32 0
}
