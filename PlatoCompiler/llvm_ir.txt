declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = constant [3 x i8] c", \00"
@.s.1 = constant [2 x i8] c"\0A\00"

@N = dso_local global i32 10
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	%1 = alloca i32
	store i32* %1, i32 2
	%2 = alloca i32
	store i32* %2, i32 5
	%3 = alloca i32
	store i32* %3, i32 1
	%4 = alloca i32
	store i32* %4, i32 2
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 = mul i32 %5, %6
	%8 = sub i32 0, %7
	%9 = add i32 %8, 0
	%10 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%11 = load i32, i32* %10
	%12 = mul i32 %11, 1
	%13 = add i32 %9, %12
	%14 = sdiv i32 1, 2
	%15 = sub i32 %13, %14
	%16 = mul i32 %15, 5
	store i32* %1, i32 %16
	%17 = mul i32 7, 5923
	%18 = srem i32 %17, 56
	%19 = mul i32 %18, 57
	%20 = load i32, i32* %3
	%21 = load i32, i32* %4
	%22 = add i32 %20, %21
	%23 = sdiv i32 89, 2
	%24 = mul i32 %23, 36
	%25 = sub i32 %24, 53
	%26 = sdiv i32 %25, 1
	%27 = mul i32 %26, 6
	%28 = sub i32 %22, %27
	%29 = mul i32 45, 56
	%30 = sdiv i32 %29, 85
	%31 = sub i32 %30, 56
	%32 = mul i32 35, 56
	%33 = sdiv i32 %32, 4
	%34 = add i32 %31, %33
	%35 = sub i32 %34, 9
	%36 = mul i32 2, %35
	%37 = sub i32 %28, %36
	%38 = add i32 %19, %37
	store i32* %2, i32 %38
	%39 = alloca i32
	%40 = sub i32 0, 6
	store i32* %39, i32 %40
	store i32* %1, i32 0
	br label %41
41:
	%42 = load i32, i32* %1
	%43 = icmp sle i32 %42, 100
	br i1 %43, label %44, label %118
44:
	%45 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%46 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%47 = load i32, i32* %46
	%48 = load i32, i32* %39
	%49 = load i32, i32* %39
	%50 = mul i32 %48, %49
	%51 = add i32 %47, %50
	store i32* %45, i32 %51
	%52 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%53 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%54 = load i32, i32* %53
	%55 = load i32, i32* %39
	%56 = load i32, i32* %39
	%57 = mul i32 %55, %56
	%58 = add i32 %54, %57
	store i32* %52, i32 %58
	%59 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%60 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%61 = load i32, i32* %60
	%62 = load i32, i32* %39
	%63 = load i32, i32* %39
	%64 = mul i32 %62, %63
	%65 = add i32 %61, %64
	store i32* %59, i32 %65
	%66 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%67 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%68 = load i32, i32* %67
	%69 = load i32, i32* %39
	%70 = load i32, i32* %39
	%71 = mul i32 %69, %70
	%72 = add i32 %68, %71
	store i32* %66, i32 %72
	%73 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%74 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%75 = load i32, i32* %74
	%76 = load i32, i32* %39
	%77 = load i32, i32* %39
	%78 = mul i32 %76, %77
	%79 = add i32 %75, %78
	store i32* %73, i32 %79
	%80 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%81 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%82 = load i32, i32* %81
	%83 = load i32, i32* %39
	%84 = load i32, i32* %39
	%85 = mul i32 %83, %84
	%86 = add i32 %82, %85
	store i32* %80, i32 %86
	%87 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%88 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%89 = load i32, i32* %88
	%90 = load i32, i32* %39
	%91 = load i32, i32* %39
	%92 = mul i32 %90, %91
	%93 = add i32 %89, %92
	store i32* %87, i32 %93
	%94 = load i32, i32* %2
	ret i32 %94
	%95 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%96 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%97 = load i32, i32* %96
	%98 = load i32, i32* %39
	%99 = load i32, i32* %39
	%100 = mul i32 %98, %99
	%101 = add i32 %97, %100
	store i32* %95, i32 %101
	%102 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%103 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%104 = load i32, i32* %103
	%105 = load i32, i32* %39
	%106 = load i32, i32* %39
	%107 = mul i32 %105, %106
	%108 = add i32 %104, %107
	store i32* %102, i32 %108
	%109 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%110 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%111 = load i32, i32* %110
	%112 = load i32, i32* %39
	%113 = load i32, i32* %39
	%114 = mul i32 %112, %113
	%115 = add i32 %111, %114
	store i32* %109, i32 %115
	%116 = load i32, i32* %1
	%117 = add i32 %116, 1
	store i32* %1, i32 %117
	br label %41
118:
	store i32* %1, i32 0
	br label %119
119:
	%120 = load i32, i32* %1
	%121 = icmp slt i32 %120, 10
	br i1 %121, label %122, label %128
122:
	%123 = load i32, i32* %1
	%124 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %123
	%125 = load i32, i32* %124
	call void @putint(i32 %125)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%126 = load i32, i32* %1
	%127 = add i32 %126, 1
	store i32* %1, i32 %127
	br label %119
128:
	%129 = load i32, i32* %1
	%130 = load i32, i32* %2
	%131 = load i32, i32* %39
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %129)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %130)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %131)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	%132 = load i32, i32* %2
	ret i32 %132
}
