declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)





define dso_local i32 @calculate(i32 %v0, i32 %v1) {
b2:
	%v3 = alloca i32
	store i32 %v0, i32* %v3
	%v4 = alloca i32
	store i32 %v1, i32* %v4
	%v5 = alloca i32
	%v6 = load i32, i32* %v3
	%v7 = icmp sgt i32 %v6, 0
	br i1 %v7, label %b8, label %b13
b8:
	%v9 = load i32, i32* %v3
	%v10 = load i32, i32* %v4
	%v11 = mul i32 %v9, %v10
	%v12 = mul i32 %v11, 2
	store i32 %v12, i32* %v5
	br label %b18
b13:
	%v14 = load i32, i32* %v3
	%v15 = load i32, i32* %v4
	%v16 = mul i32 %v14, %v15
	%v17 = mul i32 %v16, 2
	store i32 %v17, i32* %v5
	br label %b18
b18:
	%v19 = load i32, i32* %v5
	ret i32 %v19
}

define dso_local i32 @main() {
b0:
	%v1 = alloca i32
	%v2 = alloca i32
	%v3 = alloca i32
	%v4 = alloca i32
	%v5 = alloca i32
	store i32 1000, i32* %v1
	store i32 0, i32* %v5
	br label %b6
b6:
	%v7 = load i32, i32* %v5
	%v8 = load i32, i32* %v1
	%v9 = icmp slt i32 %v7, %v8
	br i1 %v9, label %b10, label %b23
b10:
	%v11 = load i32, i32* %v5
	%v12 = mul i32 %v11, 2
	%v13 = load i32, i32* %v5
	%v14 = sub i32 %v12, %v13
	%v15 = load i32, i32* %v5
	%v16 = sub i32 %v14, %v15
	store i32 %v16, i32* %v2
	store i32 9, i32* %v3
	%v17 = load i32, i32* %v2
	%v18 = load i32, i32* %v3
	%v19 = mul i32 %v17, %v18
	store i32 %v19, i32* %v4
	br label %b20
b20:
	%v21 = load i32, i32* %v5
	%v22 = add i32 %v21, 1
	store i32 %v22, i32* %v5
	br label %b6
b23:
	%v24 = load i32, i32* %v2
	%v25 = load i32, i32* %v3
	%v26 = load i32, i32* %v4
	call void @putint(i32 %v24)
	call void @putint(i32 %v25)
	call void @putint(i32 %v26)
	ret i32 0
}
