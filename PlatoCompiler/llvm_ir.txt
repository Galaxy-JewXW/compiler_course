declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)



@a = dso_local global [1 x i32] [i32 0]

define dso_local i32 @b1(i32 %v0) {
b1:
	%v2 = alloca i32
	store i32 %v0, i32* %v2
	%v3 = load i32, i32* %v2
	%v4 = add i32 %v3, 1
	ret i32 %v4
}

define dso_local i32 @main() {
b0:
	%v1 = alloca i32
	store i32 2, i32* %v1
	%v2 = alloca [1 x i32]
	%v3 = getelementptr inbounds [1 x i32], [1 x i32]* %v2, i32 0, i32 0
	store i32 0, i32* %v3
	%v4 = alloca i32
	store i32 3, i32* %v4
	%v5 = alloca i8
	%v6 = load i32, i32* %v4
	%v7 = add i32 %v6, 3
	%v8 = trunc i32 %v7 to i8
	store i8 %v8, i8* %v5
	%v9 = load i8, i8* %v5
	%v10 = zext i8 %v9 to i32
	%v11 = load i8, i8* %v5
	%v12 = zext i8 %v11 to i32
	%v13 = mul i32 %v10, %v12
	%v14 = trunc i32 %v13 to i8
	store i8 %v14, i8* %v5
	%v15 = alloca i32
	%v16 = add i32 99, 48
	store i32 %v16, i32* %v15
	%v17 = alloca i8
	%v18 = sub i32 30, 50
	%v19 = trunc i32 %v18 to i8
	store i8 %v19, i8* %v17
	ret i32 0
}
