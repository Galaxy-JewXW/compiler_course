declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [7 x i8] c"round \00", align 1
@.s.1 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.s.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1



define dso_local i32 @main() {
0:
	%1 = alloca i32
	store i32 1, i32* %1
	%2 = alloca i32
	%3 = load i32, i32* %1
	store i32 %3, i32* %2
	%4 = alloca i32
	%5 = alloca i32
	%6 = alloca i32
	%7 = call i32 @getint()
	store i32 %7, i32* %5
	%8 = load i32, i32* %1
	%9 = load i32, i32* %1
	%10 = mul i32 %8, %9
	store i32 %10, i32* %6
	br label %11
11:
	%12 = load i32, i32* %6
	%13 = load i32, i32* %5
	%14 = add i32 %13, 1
	%15 = icmp slt i32 %12, %14
	br i1 %15, label %16, label %28
16:
	%17 = load i32, i32* %2
	store i32 %17, i32* %4
	%18 = load i32, i32* %1
	%19 = load i32, i32* %2
	%20 = add i32 %18, %19
	store i32 %20, i32* %2
	%21 = load i32, i32* %4
	store i32 %21, i32* %1
	%22 = load i32, i32* %6
	%23 = srem i32 %22, 2
	%24 = icmp eq i32 %23, 1
	br i1 %24, label %29, label %30
25:
	%26 = load i32, i32* %6
	%27 = add i32 %26, 1
	store i32 %27, i32* %6
	br label %11
28:
	ret i32 0
29:
	br label %25
	br label %30
30:
	%31 = load i32, i32* %6
	%32 = load i32, i32* %1
	call void @putstr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %31)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %32)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.2, i64 0, i64 0))
	%33 = load i32, i32* %6
	%34 = icmp sgt i32 %33, 19
	br i1 %34, label %35, label %36
35:
	br label %28
	br label %36
36:
	br label %25
}
