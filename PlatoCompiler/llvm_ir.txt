declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [13 x i8] c"print int : \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.s.2 = private unnamed_addr constant [10 x i8] c"19373479\0A\00", align 1

@singleConstDecl = dso_local global i32 23
@singleConstDecl_0 = dso_local global i32 13
@singleConstDecl_1 = dso_local global i32 3
@singleVarDecl = dso_local global i32 -10
@singleVarDecl_0 = dso_local global i32 23
@singleVarDecl_1 = dso_local global i32 10
@singleVarDecl_2 = dso_local global i32 0

define dso_local void @funcDef_void() {
0:
	ret void
}

define dso_local i32 @funcDef_0(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = alloca i32
	%4 = load i32, i32* %2
	%5 = mul i32 %4, 10
	store i32 %5, i32* %3
	%6 = load i32, i32* %3
	ret i32 %6
}

define dso_local i32 @funcDef_1(i32 %0, i32 %1) {
2:
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4
	%5 = alloca i32
	%6 = load i32, i32* %3
	%7 = load i32, i32* %4
	%8 = mul i32 %6, %7
	store i32 %8, i32* %5
	%9 = alloca i32
	%10 = alloca i32
	%11 = load i32, i32* %4
	%12 = icmp ne i32 %11, 0
	br i1 %12, label %13, label %22
13:
	%14 = load i32, i32* %5
	%15 = load i32, i32* %3
	%16 = load i32, i32* %4
	%17 = srem i32 %15, %16
	%18 = add i32 %14, %17
	store i32 %18, i32* %9
	%19 = load i32, i32* %3
	%20 = load i32, i32* %4
	%21 = sdiv i32 %19, %20
	store i32 %21, i32* %10
	br label %28
22:
	%23 = load i32, i32* %5
	%24 = load i32, i32* %3
	%25 = add i32 %23, %24
	store i32 %25, i32* %9
	%26 = load i32, i32* %3
	%27 = sdiv i32 %26, 2
	store i32 %27, i32* %10
	br label %28
28:
	%29 = load i32, i32* %9
	%30 = load i32, i32* %5
	%31 = sub i32 %29, %30
	store i32 %31, i32* %9
	%32 = load i32, i32* %5
	%33 = load i32, i32* %9
	%34 = add i32 %32, %33
	%35 = load i32, i32* %5
	%36 = icmp slt i32 %35, 0
	br i1 %36, label %37, label %40
37:
	%38 = load i32, i32* %5
	%39 = sub i32 0, %38
	store i32 %39, i32* %5
	br label %40
40:
	%41 = load i32, i32* %5
	%42 = add i32 1, %41
	%43 = load i32, i32* %9
	%44 = load i32, i32* %10
	%45 = add i32 %43, %44
	%46 = mul i32 %42, %45
	ret i32 %46
}

define dso_local void @printInt(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %3)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret void
}

define dso_local i32 @main() {
0:
	call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.s.2, i64 0, i64 0))
	%1 = alloca i32
	store i32 10, i32* %1
	%2 = alloca i32
	%3 = alloca i32
	%4 = alloca i32
	%5 = alloca i32
	%6 = call i32 @getint()
	store i32 %6, i32* %2
	%7 = call i32 @getint()
	store i32 %7, i32* %3
	%8 = call i32 @getint()
	store i32 %8, i32* %4
	%9 = call i32 @getint()
	store i32 %9, i32* %5
	%10 = load i32, i32* %2
	%11 = icmp sgt i32 %10, 5
	br i1 %11, label %12, label %13
12:
	store i32 5, i32* %2
	br label %13
13:
	br label %14
14:
	%15 = load i32, i32* %1
	%16 = icmp ne i32 %15, 0
	br i1 %16, label %17, label %23
17:
	%18 = load i32, i32* %1
	%19 = sub i32 %18, 1
	store i32 %19, i32* %1
	%20 = load i32, i32* %3
	%21 = load i32, i32* %1
	%22 = icmp sge i32 %20, %21
	br i1 %22, label %28, label %35
23:
	%24 = load i32, i32* %1
	%25 = icmp eq i32 0, %24
	%26 = zext i1 %25 to i32
	%27 = icmp ne i32 %26, 0
	br i1 %27, label %71, label %73
28:
	%29 = load i32, i32* %3
	%30 = load i32, i32* %1
	%31 = add i32 %30, 1
	%32 = sdiv i32 %29, %31
	%33 = load i32, i32* %1
	%34 = add i32 %32, %33
	store i32 %34, i32* %3
	br label %35
35:
	%36 = load i32, i32* %4
	%37 = load i32, i32* %1
	%38 = icmp sle i32 %36, %37
	br i1 %38, label %39, label %43
39:
	%40 = load i32, i32* %4
	%41 = load i32, i32* %1
	%42 = mul i32 %40, %41
	store i32 %42, i32* %4
	br label %48
43:
	%44 = load i32, i32* %4
	%45 = load i32, i32* %1
	%46 = add i32 %45, 3
	%47 = srem i32 %44, %46
	store i32 %47, i32* %4
	br label %48
48:
	br label %49
49:
	%50 = load i32, i32* %5
	%51 = load i32, i32* %4
	%52 = icmp slt i32 %50, %51
	br i1 %52, label %53, label %60
53:
	%54 = load i32, i32* %5
	%55 = load i32, i32* %1
	%56 = add i32 %54, %55
	store i32 %56, i32* %5
	%57 = load i32, i32* %5
	%58 = load i32, i32* %2
	%59 = icmp eq i32 %57, %58
	br i1 %59, label %61, label %62
60:
	br label %14
61:
	br label %60
	br label %62
62:
	%63 = load i32, i32* %5
	%64 = load i32, i32* %3
	%65 = icmp ne i32 %63, %64
	br i1 %65, label %66, label %70
66:
	%67 = load i32, i32* %3
	%68 = load i32, i32* %5
	%69 = add i32 %67, %68
	store i32 %69, i32* %5
	br label %49
	br label %70
70:
	br label %49
71:
	%72 = load i32, i32* %1
	call void @printInt(i32 %72)
	br label %73
73:
	%74 = load i32, i32* %2
	call void @printInt(i32 %74)
	%75 = load i32, i32* %3
	call void @printInt(i32 %75)
	%76 = load i32, i32* %4
	call void @printInt(i32 %76)
	%77 = load i32, i32* %5
	call void @printInt(i32 %77)
	%78 = alloca i32
	%79 = load i32, i32* %5
	%80 = load i32, i32* %4
	%81 = call i32 @funcDef_1(i32 %79, i32 %80)
	store i32 %81, i32* %78
	%82 = alloca i32
	%83 = load i32, i32* %78
	%84 = load i32, i32* %3
	%85 = call i32 @funcDef_0(i32 %84)
	%86 = call i32 @funcDef_1(i32 %83, i32 %85)
	store i32 %86, i32* %82
	call void @funcDef_void()
	%87 = load i32, i32* %78
	call void @printInt(i32 %87)
	%88 = load i32, i32* %82
	call void @printInt(i32 %88)
	%89 = load i32, i32* @singleVarDecl
	%90 = load i32, i32* @singleVarDecl_2
	%91 = call i32 @funcDef_1(i32 %89, i32 %90)
	%92 = load i32, i32* @singleConstDecl_0
	%93 = load i32, i32* @singleConstDecl_1
	%94 = call i32 @funcDef_1(i32 %92, i32 %93)
	%95 = call i32 @funcDef_1(i32 %91, i32 %94)
	store i32 %95, i32* @singleVarDecl_2
	%96 = load i32, i32* @singleVarDecl_2
	call void @printInt(i32 %96)
	ret i32 0
}
