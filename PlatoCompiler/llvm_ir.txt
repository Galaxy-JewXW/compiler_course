declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@a = dso_local constant i32 0

define dso_local i32 @f(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = load i32, i32* @a
	%5 = add i32 %4, 1
	%6 = icmp eq i32 %3, %5
	br i1 %6, label %7, label %8
7:
	ret i32 1
	br label %14
8:
	%9 = load i32, i32* %2
	%10 = load i32, i32* %2
	%11 = sub i32 %10, 1
	%12 = call i32 @f(i32 %11)
	%13 = mul i32 %9, %12
	ret i32 %13
	br label %14
14:
	ret i32 1
}

define dso_local i32 @main() {
0:
	%1 = load i32, i32* @a
	call void @putint(i32 %1)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	%2 = call i32 @f(i32 10)
	call void @putint(i32 %2)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	ret i32 0
}
