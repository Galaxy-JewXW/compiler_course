declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [6 x i8] c"I am \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1



define dso_local i32 @main() {
0:
	%1 = alloca i32
	%2 = alloca i32
	%3 = call i32 @getint()
	store i32 %3, i32* %1
	%4 = load i32, i32* %1
	%5 = load i32, i32* %2
	%6 = add i32 %4, %5
	%7 = load i32, i32* %1
	%8 = load i32, i32* %2
	%9 = add i32 %7, %8
	%10 = sub i32 %6, %9
	call void @putstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %10)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 0
}
