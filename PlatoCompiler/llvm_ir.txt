declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)



@N = dso_local global i32 10
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	store i32 5, i32* %2
	%3 = alloca i32
	store i32 1, i32* %3
	%4 = alloca i32
	store i32 2, i32* %4
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 = mul i32 %5, %6
	%8 = sub i32 0, %7
	%9 = add i32 %8, 0
	%10 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%11 = load i32, i32* %10
	%12 = mul i32 %11, 1
	%13 = add i32 %9, %12
	%14 = sdiv i32 1, 2
	%15 = sub i32 %13, %14
	%16 = mul i32 %15, 5
	store i32 %16, i32* %1
	%17 = load i32, i32* %1
	ret i32 %17
}
