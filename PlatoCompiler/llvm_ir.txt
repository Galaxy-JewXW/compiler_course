declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)



@s1 = dso_local global [7 x i8] zeroinitializer
@ss1 = dso_local constant [6 x i8] [i8 54, i8 0, i8 0, i8 0, i8 0, i8 0]

define dso_local i32 @main() {
b0:
	%v1 = alloca [7 x i8]
	%v2 = alloca [6 x i8]
	%v3 = getelementptr inbounds [6 x i8], [6 x i8]* %v2, i32 0, i32 0
	store i8 97, i8* %v3
	%v4 = getelementptr inbounds [6 x i8], [6 x i8]* %v2, i32 0, i32 1
	store i8 0, i8* %v4
	%v5 = getelementptr inbounds [6 x i8], [6 x i8]* %v2, i32 0, i32 2
	store i8 0, i8* %v5
	%v6 = getelementptr inbounds [6 x i8], [6 x i8]* %v2, i32 0, i32 3
	store i8 0, i8* %v6
	%v7 = getelementptr inbounds [6 x i8], [6 x i8]* %v2, i32 0, i32 4
	store i8 0, i8* %v7
	%v8 = getelementptr inbounds [6 x i8], [6 x i8]* %v2, i32 0, i32 5
	store i8 0, i8* %v8
	ret i32 0
}
