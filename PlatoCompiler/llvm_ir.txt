declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)



@x = dso_local global [10 x i32] zeroinitializer
@i = dso_local global i32 0

define dso_local i32 @main() {
0:
	br label %1
1:
	%2 = load i32, i32* @i
	%3 = icmp sle i32 %2, 10
	br i1 %3, label %4, label %6
4:
	%5 = load i32, i32* @i
	br i32 %5, label %7, label %8
6:
	ret i32 0
7:
	store i32* @i, i32 4
	br label %1
	br label %8
8:
	%9 = load i32, i32* @i
	%10 = getelementptr inbounds [10 x i32], [10 x i32]* @x, i32 0, i32 %9
	%11 = load i32, i32* @i
	store i32* %10, i32 %11
	%12 = load i32, i32* @i
	%13 = add i32 %12, 1
	store i32* @i, i32 %13
	%14 = load i32, i32* @i
	br i32 %14, label %15, label %16
15:
	br label %6
	br label %16
16:
	br label %1
}
