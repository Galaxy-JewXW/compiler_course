declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [4 x i8] c"--1\00", align 1
@.s.1 = private unnamed_addr constant [4 x i8] c"--2\00", align 1
@.s.2 = private unnamed_addr constant [4 x i8] c"--3\00", align 1

@a = dso_local global i32 1

define dso_local i32 @func() {
0:
	store i32 2, i32* @a
	ret i32 1
}

define dso_local i32 @func2() {
0:
	store i32 4, i32* @a
	ret i32 10
}

define dso_local i32 @func3() {
0:
	store i32 3, i32* @a
	ret i32 0
}

define dso_local i32 @main() {
0:
	%1 = icmp ne i32 0, 0
	br i1 %1, label %2, label %6
2:
	%3 = load i32, i32* @a
	call void @putint(i32 %3)
	call void @putstr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.s.0, i64 0, i64 0))
	br label %4
4:
	%5 = icmp ne i32 1, 0
	br i1 %5, label %15, label %19
6:
	%7 = call i32 @func()
	%8 = icmp ne i32 %7, 0
	br i1 %8, label %12, label %9
9:
	%10 = call i32 @func2()
	%11 = icmp ne i32 %10, 0
	br i1 %11, label %2, label %4
12:
	%13 = call i32 @func3()
	%14 = icmp ne i32 %13, 0
	br i1 %14, label %2, label %9
15:
	%16 = load i32, i32* @a
	call void @putint(i32 %16)
	call void @putstr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.s.1, i64 0, i64 0))
	br label %17
17:
	%18 = icmp ne i32 0, 0
	br i1 %18, label %22, label %25
19:
	%20 = call i32 @func3()
	%21 = icmp ne i32 %20, 0
	br i1 %21, label %15, label %17
22:
	%23 = load i32, i32* @a
	call void @putint(i32 %23)
	call void @putstr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.s.2, i64 0, i64 0))
	br label %24
24:
	ret i32 0
25:
	%26 = call i32 @func3()
	%27 = icmp ne i32 %26, 0
	br i1 %27, label %22, label %28
28:
	%29 = call i32 @func()
	%30 = call i32 @func2()
	%31 = icmp slt i32 %29, %30
	br i1 %31, label %22, label %24
}
