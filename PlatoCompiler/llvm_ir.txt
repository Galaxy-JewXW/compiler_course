declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@symbol = dso_local global [7 x i32] zeroinitializer
@array = dso_local global [7 x i32] zeroinitializer
@n = dso_local global i32 0

define dso_local void @FullArray(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = alloca i32
	%4 = load i32, i32* %2
	%5 = load i32, i32* @n
	%6 = icmp sge i32 %4, %5
	br i1 %6, label %7, label %8
7:
	store i32 0, i32* %3
	br label %9
8:
	store i32 0, i32* %3
	br label %21
9:
	%10 = load i32, i32* %3
	%11 = load i32, i32* @n
	%12 = icmp slt i32 %10, %11
	br i1 %12, label %13, label %20
13:
	%14 = load i32, i32* %3
	%15 = getelementptr inbounds [7 x i32], [7 x i32]* @array, i32 0, i32 %14
	%16 = load i32, i32* %15
	call void @putint(i32 %16)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	br label %17
17:
	%18 = load i32, i32* %3
	%19 = add i32 %18, 1
	store i32 %19, i32* %3
	br label %9
20:
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret void
	br label %8
21:
	%22 = load i32, i32* %3
	%23 = load i32, i32* @n
	%24 = icmp slt i32 %22, %23
	br i1 %24, label %25, label %33
25:
	%26 = load i32, i32* %3
	%27 = getelementptr inbounds [7 x i32], [7 x i32]* @symbol, i32 0, i32 %26
	%28 = load i32, i32* %27
	%29 = icmp eq i32 %28, 0
	br i1 %29, label %34, label %45
30:
	%31 = load i32, i32* %3
	%32 = add i32 %31, 1
	store i32 %32, i32* %3
	br label %21
33:
	ret void
34:
	%35 = load i32, i32* %2
	%36 = getelementptr inbounds [7 x i32], [7 x i32]* @array, i32 0, i32 %35
	%37 = load i32, i32* %3
	%38 = add i32 %37, 1
	store i32 %38, i32* %36
	%39 = load i32, i32* %3
	%40 = getelementptr inbounds [7 x i32], [7 x i32]* @symbol, i32 0, i32 %39
	store i32 1, i32* %40
	%41 = load i32, i32* %2
	%42 = add i32 %41, 1
	call void @FullArray(i32 %42)
	%43 = load i32, i32* %3
	%44 = getelementptr inbounds [7 x i32], [7 x i32]* @symbol, i32 0, i32 %43
	store i32 0, i32* %44
	br label %45
45:
	br label %30
}

define dso_local i32 @main() {
0:
	%1 = alloca i32
	%2 = call i32 @getint()
	store i32 %2, i32* @n
	call void @FullArray(i32 0)
	ret i32 0
}
