declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c"BB\00", align 1



define dso_local i32 @main() {
0:
	%1 = alloca i32
	%2 = alloca i32
	%3 = call i32 @getint()
	store i32 %3, i32* %1
	%4 = call i32 @getint()
	store i32 %4, i32* %2
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 = icmp sgt i32 %5, %6
	%8 = zext i1 %7 to i32
	%9 = load i32, i32* %1
	%10 = load i32, i32* %2
	%11 = icmp slt i32 %9, %10
	%12 = zext i1 %11 to i32
	%13 = icmp eq i32 %8, %12
	%14 = zext i1 %13 to i32
	%15 = load i32, i32* %1
	%16 = load i32, i32* %2
	%17 = icmp sgt i32 %15, %16
	%18 = zext i1 %17 to i32
	%19 = icmp ne i32 %14, %18
	br i1 %19, label %20, label %21
20:
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	br label %21
21:
	ret i32 0
}
