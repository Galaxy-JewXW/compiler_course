declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = constant [2 x i8] c"\0A\00"



define dso_local i32 @f(i32 %0) {
1:
	%2 = alloca i32
	store i32* %2, i32 %0
	%3 = load i32, i32* %2
	%4 = icmp eq i32 %3, 1
	br i1 %4, label %5, label %6
5:
	ret i32 1
	br label %12
6:
	%7 = load i32, i32* %2
	%8 = load i32, i32* %2
	%9 = sub i32 %8, 1
	%10 = call i32 @f(i32 %9)
	%11 = mul i32 %7, %10
	ret i32 %11
	br label %12
12:
	ret i32 0
}

define dso_local i32 @main() {
0:
	%1 = alloca i8
	%2 = icmp sgt i32 1, 2
	%3 = zext i1 %2 to i32
	%4 = icmp slt i32 %3, 1
	br i1 %4, label %5, label %8
5:
	%6 = add i32 97, 97
	%7 = trunc i32 %6 to i8
	store i8* %1, i8 %7
	br label %9
8:
	store i8* %1, i8 99
	br label %9
9:
	%10 = call i32 @f(i32 10)
	%11 = load i8, i8* %1
	%12 = zext i8 %11 to i32
	%13 = add i32 %10, %12
	call void @putint(i32 %13)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.0, i64 0, i64 0))
	ret i32 0
}
