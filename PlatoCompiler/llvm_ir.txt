declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@N = dso_local constant i32 10
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @fib(i32 %v0) {
b1:
	%v2 = alloca i32
	store i32 %v0, i32* %v2
	%v3 = load i32, i32* %v2
	%v4 = icmp eq i32 %v3, 1
	br i1 %v4, label %b5, label %b6
b5:
	ret i32 1
	br label %b6
b6:
	%v7 = load i32, i32* %v2
	%v8 = icmp eq i32 %v7, 2
	br i1 %v8, label %b9, label %b10
b9:
	ret i32 2
	br label %b10
b10:
	%v11 = load i32, i32* %v2
	%v12 = sub i32 %v11, 1
	%v13 = call i32 @fib(i32 %v12)
	%v14 = load i32, i32* %v2
	%v15 = sub i32 %v14, 2
	%v16 = call i32 @fib(i32 %v15)
	%v17 = add i32 %v13, %v16
	ret i32 %v17
}

define dso_local i32 @main() {
b0:
	%v1 = alloca i32
	store i32 2, i32* %v1
	%v2 = alloca i32
	store i32 5, i32* %v2
	%v3 = alloca i32
	store i32 1, i32* %v3
	%v4 = alloca i32
	store i32 2, i32* %v4
	%v5 = call i32 @getint()
	store i32 %v5, i32* %v1
	%v6 = call i32 @getint()
	store i32 %v6, i32* %v2
	%v7 = load i32, i32* %v1
	%v8 = load i32, i32* %v2
	%v9 = mul i32 %v7, %v8
	%v10 = sub i32 0, %v9
	%v11 = call i32 @fib(i32 4)
	%v12 = mul i32 %v10, %v11
	%v13 = add i32 %v12, 0
	%v14 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v15 = load i32, i32* %v14
	%v16 = mul i32 %v15, 1
	%v17 = add i32 %v13, %v16
	%v18 = sdiv i32 1, 2
	%v19 = sub i32 %v17, %v18
	%v20 = sdiv i32 %v19, 5
	store i32 %v20, i32* %v1
	%v21 = mul i32 7, 5923
	%v22 = srem i32 %v21, 56
	%v23 = mul i32 %v22, 57
	%v24 = call i32 @fib(i32 4)
	%v25 = add i32 %v24, 2
	%v26 = call i32 @fib(i32 %v25)
	%v27 = sub i32 %v23, %v26
	%v28 = load i32, i32* %v3
	%v29 = load i32, i32* %v4
	%v30 = add i32 %v28, %v29
	%v31 = sdiv i32 89, 2
	%v32 = mul i32 %v31, 36
	%v33 = sub i32 %v32, 53
	%v34 = sdiv i32 %v33, 1
	%v35 = mul i32 %v34, 6
	%v36 = sub i32 %v30, %v35
	%v37 = mul i32 45, 56
	%v38 = sdiv i32 %v37, 85
	%v39 = sub i32 %v38, 56
	%v40 = mul i32 35, 56
	%v41 = sdiv i32 %v40, 4
	%v42 = add i32 %v39, %v41
	%v43 = sub i32 %v42, 9
	%v44 = mul i32 2, %v43
	%v45 = sub i32 %v36, %v44
	%v46 = add i32 %v27, %v45
	store i32 %v46, i32* %v2
	%v47 = alloca i32
	%v48 = sub i32 0, 6
	store i32 %v48, i32* %v47
	br label %b49
b49:
	%v50 = load i32, i32* %v1
	%v51 = icmp slt i32 %v50, 100
	br i1 %v51, label %b52, label %b124
b52:
	%v53 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%v54 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%v55 = load i32, i32* %v54
	%v56 = load i32, i32* %v1
	%v57 = load i32, i32* %v1
	%v58 = mul i32 %v56, %v57
	%v59 = add i32 %v55, %v58
	store i32 %v59, i32* %v53
	%v60 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v61 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v62 = load i32, i32* %v61
	%v63 = load i32, i32* %v1
	%v64 = load i32, i32* %v1
	%v65 = mul i32 %v63, %v64
	%v66 = add i32 %v62, %v65
	store i32 %v66, i32* %v60
	%v67 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%v68 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%v69 = load i32, i32* %v68
	%v70 = load i32, i32* %v1
	%v71 = load i32, i32* %v1
	%v72 = mul i32 %v70, %v71
	%v73 = add i32 %v69, %v72
	store i32 %v73, i32* %v67
	%v74 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%v75 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%v76 = load i32, i32* %v75
	%v77 = load i32, i32* %v1
	%v78 = load i32, i32* %v1
	%v79 = mul i32 %v77, %v78
	%v80 = add i32 %v76, %v79
	store i32 %v80, i32* %v74
	%v81 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%v82 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%v83 = load i32, i32* %v82
	%v84 = load i32, i32* %v1
	%v85 = load i32, i32* %v1
	%v86 = mul i32 %v84, %v85
	%v87 = add i32 %v83, %v86
	store i32 %v87, i32* %v81
	%v88 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%v89 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%v90 = load i32, i32* %v89
	%v91 = load i32, i32* %v1
	%v92 = load i32, i32* %v1
	%v93 = mul i32 %v91, %v92
	%v94 = add i32 %v90, %v93
	store i32 %v94, i32* %v88
	%v95 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%v96 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%v97 = load i32, i32* %v96
	%v98 = load i32, i32* %v1
	%v99 = load i32, i32* %v1
	%v100 = mul i32 %v98, %v99
	%v101 = add i32 %v97, %v100
	store i32 %v101, i32* %v95
	%v102 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%v103 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%v104 = load i32, i32* %v103
	%v105 = load i32, i32* %v1
	%v106 = load i32, i32* %v1
	%v107 = mul i32 %v105, %v106
	%v108 = add i32 %v104, %v107
	store i32 %v108, i32* %v102
	%v109 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%v110 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%v111 = load i32, i32* %v110
	%v112 = load i32, i32* %v1
	%v113 = load i32, i32* %v1
	%v114 = mul i32 %v112, %v113
	%v115 = add i32 %v111, %v114
	store i32 %v115, i32* %v109
	%v116 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%v117 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%v118 = load i32, i32* %v117
	%v119 = load i32, i32* %v1
	%v120 = load i32, i32* %v1
	%v121 = mul i32 %v119, %v120
	%v122 = add i32 %v118, %v121
	store i32 %v122, i32* %v116
	br label %b123
b123:
	br label %b49
b124:
	store i32 0, i32* %v1
	br label %b125
b125:
	%v126 = load i32, i32* %v1
	%v127 = icmp slt i32 %v126, 10
	br i1 %v127, label %b128, label %b135
b128:
	%v129 = load i32, i32* %v1
	%v130 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %v129
	%v131 = load i32, i32* %v130
	call void @putint(i32 %v131)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%v132 = load i32, i32* %v1
	%v133 = add i32 %v132, 1
	store i32 %v133, i32* %v1
	br label %b134
b134:
	br label %b125
b135:
	%v136 = load i32, i32* %v1
	%v137 = load i32, i32* %v2
	%v138 = load i32, i32* %v47
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %v136)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %v137)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %v138)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 0
}
