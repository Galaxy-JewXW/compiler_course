declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)

@.s.0 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.s.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@N = dso_local global i32 10
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @main() {
0:
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	store i32 5, i32* %2
	%3 = alloca i32
	store i32 1, i32* %3
	%4 = alloca i32
	store i32 2, i32* %4
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 = mul i32 %5, %6
	%8 = sub i32 0, %7
	%9 = add i32 %8, 0
	%10 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%11 = load i32, i32* %10
	%12 = mul i32 %11, 1
	%13 = add i32 %9, %12
	%14 = sdiv i32 1, 2
	%15 = sub i32 %13, %14
	%16 = mul i32 %15, 5
	store i32 %16, i32* %1
	%17 = mul i32 7, 5923
	%18 = srem i32 %17, 56
	%19 = mul i32 %18, 57
	%20 = load i32, i32* %3
	%21 = load i32, i32* %4
	%22 = add i32 %20, %21
	%23 = sdiv i32 89, 2
	%24 = mul i32 %23, 36
	%25 = sub i32 %24, 53
	%26 = sdiv i32 %25, 1
	%27 = mul i32 %26, 6
	%28 = sub i32 %22, %27
	%29 = mul i32 45, 56
	%30 = sdiv i32 %29, 85
	%31 = sub i32 %30, 56
	%32 = mul i32 35, 56
	%33 = sdiv i32 %32, 4
	%34 = add i32 %31, %33
	%35 = sub i32 %34, 9
	%36 = mul i32 2, %35
	%37 = sub i32 %28, %36
	%38 = add i32 %19, %37
	store i32 %38, i32* %2
	%39 = alloca i32
	%40 = sub i32 0, 6
	store i32 %40, i32* %39
	store i32 0, i32* %1
	br label %41
41:
	%42 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%43 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%44 = load i32, i32* %43
	%45 = load i32, i32* %39
	%46 = load i32, i32* %39
	%47 = mul i32 %45, %46
	%48 = add i32 %44, %47
	store i32 %48, i32* %42
	%49 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%50 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%51 = load i32, i32* %50
	%52 = load i32, i32* %39
	%53 = load i32, i32* %39
	%54 = mul i32 %52, %53
	%55 = add i32 %51, %54
	store i32 %55, i32* %49
	%56 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%57 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%58 = load i32, i32* %57
	%59 = load i32, i32* %39
	%60 = load i32, i32* %39
	%61 = mul i32 %59, %60
	%62 = add i32 %58, %61
	store i32 %62, i32* %56
	%63 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%64 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%65 = load i32, i32* %64
	%66 = load i32, i32* %39
	%67 = load i32, i32* %39
	%68 = mul i32 %66, %67
	%69 = add i32 %65, %68
	store i32 %69, i32* %63
	%70 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%71 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%72 = load i32, i32* %71
	%73 = load i32, i32* %39
	%74 = load i32, i32* %39
	%75 = mul i32 %73, %74
	%76 = add i32 %72, %75
	store i32 %76, i32* %70
	%77 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%78 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%79 = load i32, i32* %78
	%80 = load i32, i32* %39
	%81 = load i32, i32* %39
	%82 = mul i32 %80, %81
	%83 = add i32 %79, %82
	store i32 %83, i32* %77
	%84 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%85 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%86 = load i32, i32* %85
	%87 = load i32, i32* %39
	%88 = load i32, i32* %39
	%89 = mul i32 %87, %88
	%90 = add i32 %86, %89
	store i32 %90, i32* %84
	%91 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%92 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%93 = load i32, i32* %92
	%94 = load i32, i32* %39
	%95 = load i32, i32* %39
	%96 = mul i32 %94, %95
	%97 = add i32 %93, %96
	store i32 %97, i32* %91
	%98 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%99 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%100 = load i32, i32* %99
	%101 = load i32, i32* %39
	%102 = load i32, i32* %39
	%103 = mul i32 %101, %102
	%104 = add i32 %100, %103
	store i32 %104, i32* %98
	%105 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%106 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%107 = load i32, i32* %106
	%108 = load i32, i32* %39
	%109 = load i32, i32* %39
	%110 = mul i32 %108, %109
	%111 = add i32 %107, %110
	store i32 %111, i32* %105
	%112 = load i32, i32* %1
	%113 = add i32 %112, 1
	store i32 %113, i32* %1
	br label %114
114:
	br label %115
115:
	%116 = load i32, i32* %1
	%117 = icmp sle i32 %116, 100
	br i1 %117, label %41, label %118
118:
	store i32 0, i32* %1
	br label %119
119:
	%120 = load i32, i32* %1
	%121 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %120
	%122 = load i32, i32* %121
	call void @putint(i32 %122)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	%123 = load i32, i32* %1
	%124 = add i32 %123, 1
	store i32 %124, i32* %1
	br label %125
125:
	br label %126
126:
	%127 = load i32, i32* %1
	%128 = icmp slt i32 %127, 10
	br i1 %128, label %119, label %129
129:
	%130 = load i32, i32* %1
	%131 = load i32, i32* %2
	%132 = load i32, i32* %39
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	call void @putint(i32 %130)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %131)
	call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.s.0, i64 0, i64 0))
	call void @putint(i32 %132)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.s.1, i64 0, i64 0))
	ret i32 0
}
