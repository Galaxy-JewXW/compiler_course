INTTK int
IDENFR ga
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR gb
ASSIGN =
INTCON 0
COMMA ,
IDENFR gc
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR add
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
PLUS +
IDENFR b
SEMICN ;
RBRACE }
INTTK int
IDENFR sub
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
IDENFR b
ASSIGN =
IDENFR a
MINU -
IDENFR b
SEMICN ;
RETURNTK return
IDENFR b
SEMICN ;
RBRACE }
INTTK int
IDENFR mult
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
INTTK int
IDENFR r
ASSIGN =
IDENFR a
MULT *
IDENFR b
SEMICN ;
RETURNTK return
IDENFR r
SEMICN ;
RBRACE }
VOIDTK void
IDENFR addGaGb
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
IDENFR ga
ASSIGN =
IDENFR add
LPARENT (
IDENFR ga
COMMA ,
IDENFR n
RPARENT )
SEMICN ;
IDENFR gb
ASSIGN =
IDENFR sub
LPARENT (
IDENFR gb
COMMA ,
MINU -
IDENFR n
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR addGaGbGc
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
IDENFR addGaGb
LPARENT (
IDENFR sub
LPARENT (
IDENFR n
COMMA ,
IDENFR n
RPARENT )
PLUS +
IDENFR mult
LPARENT (
IDENFR n
COMMA ,
IDENFR add
LPARENT (
INTCON 0
COMMA ,
INTCON 1
RPARENT )
RPARENT )
RPARENT )
SEMICN ;
IDENFR gc
ASSIGN =
IDENFR add
LPARENT (
IDENFR gc
COMMA ,
IDENFR mult
LPARENT (
INTCON 1
COMMA ,
IDENFR n
RPARENT )
PLUS +
IDENFR add
LPARENT (
IDENFR n
COMMA ,
IDENFR n
RPARENT )
PLUS +
IDENFR sub
LPARENT (
INTCON 0
COMMA ,
INTCON 2
MULT *
IDENFR n
RPARENT )
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR publish
LPARENT (
INTTK int
IDENFR id
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d: %d %d %d\n"
COMMA ,
IDENFR id
COMMA ,
IDENFR ga
COMMA ,
IDENFR gb
COMMA ,
IDENFR gc
RPARENT )
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "global init: %d %d %d\n"
COMMA ,
IDENFR ga
COMMA ,
IDENFR gb
COMMA ,
IDENFR gc
RPARENT )
SEMICN ;
INTTK int
IDENFR a
ASSIGN =
INTCON 13
SEMICN ;
INTTK int
IDENFR t
ASSIGN =
IDENFR a
PLUS +
INTCON 7
SEMICN ;
IDENFR addGaGb
LPARENT (
IDENFR t
RPARENT )
SEMICN ;
IDENFR publish
LPARENT (
INTCON 1
RPARENT )
SEMICN ;
IDENFR addGaGbGc
LPARENT (
LPARENT (
IDENFR t
MINU -
INTCON 20
RPARENT )
PLUS +
LPARENT (
IDENFR t
MINU -
INTCON 10
RPARENT )
MULT *
INTCON 3
RPARENT )
SEMICN ;
IDENFR publish
LPARENT (
INTCON 2
RPARENT )
SEMICN ;
IDENFR addGaGbGc
LPARENT (
IDENFR mult
LPARENT (
INTCON 10
COMMA ,
IDENFR t
RPARENT )
RPARENT )
SEMICN ;
IDENFR publish
LPARENT (
INTCON 3
RPARENT )
SEMICN ;
IDENFR addGaGbGc
LPARENT (
MINU -
IDENFR sub
LPARENT (
IDENFR t
COMMA ,
IDENFR add
LPARENT (
IDENFR t
COMMA ,
INTCON 50
RPARENT )
RPARENT )
MULT *
IDENFR mult
LPARENT (
MINU -
INTCON 1
COMMA ,
IDENFR t
RPARENT )
MOD %
IDENFR mult
LPARENT (
IDENFR add
LPARENT (
IDENFR t
COMMA ,
INTCON 3
RPARENT )
COMMA ,
INTCON 2
RPARENT )
RPARENT )
SEMICN ;
IDENFR publish
LPARENT (
INTCON 4
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
