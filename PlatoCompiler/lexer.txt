INTTK int
IDENFR symbol
LBRACK [
INTCON 7
RBRACK ]
COMMA ,
IDENFR array
LBRACK [
INTCON 7
RBRACK ]
SEMICN ;
INTTK int
IDENFR n
SEMICN ;
VOIDTK void
IDENFR FullArray
LPARENT (
INTTK int
IDENFR index
RPARENT )
LBRACE {
INTTK int
IDENFR i
SEMICN ;
IFTK if
LPARENT (
IDENFR index
GEQ >=
IDENFR n
RPARENT )
LBRACE {
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR n
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d "
COMMA ,
IDENFR array
LBRACK [
IDENFR i
RBRACK ]
RPARENT )
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON "\n"
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR n
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR symbol
LBRACK [
IDENFR i
RBRACK ]
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR array
LBRACK [
IDENFR index
RBRACK ]
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
IDENFR symbol
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
INTCON 1
SEMICN ;
IDENFR FullArray
LPARENT (
IDENFR index
PLUS +
INTCON 1
RPARENT )
SEMICN ;
IDENFR symbol
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
INTCON 0
SEMICN ;
RBRACE }
RBRACE }
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
SEMICN ;
IDENFR n
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR FullArray
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
