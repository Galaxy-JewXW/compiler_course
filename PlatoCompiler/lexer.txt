CONSTTK const
INTTK int
IDENFR a
ASSIGN =
INTCON 0
SEMICN ;
CONSTTK const
INTTK int
IDENFR b
LBRACK [
INTCON 100
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
SEMICN ;
INTTK int
IDENFR f
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR n
EQL ==
IDENFR a
PLUS +
INTCON 1
RPARENT )
RETURNTK return
INTCON 1
SEMICN ;
ELSETK else
RETURNTK return
IDENFR n
MULT *
IDENFR f
LPARENT (
IDENFR n
MINU -
INTCON 1
RPARENT )
SEMICN ;
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR c
LBRACK [
INTCON 100000
RBRACK ]
ASSIGN =
LBRACE {
INTCON 2
RBRACE }
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d%d%d\n"
COMMA ,
IDENFR a
COMMA ,
IDENFR c
LBRACK [
INTCON 190
RBRACK ]
COMMA ,
IDENFR b
LBRACK [
INTCON 98
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d%d\n"
COMMA ,
IDENFR f
LPARENT (
INTCON 10
RPARENT )
COMMA ,
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
