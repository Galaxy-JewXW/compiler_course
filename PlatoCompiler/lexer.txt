INTTK int
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR func
LPARENT (
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 2
SEMICN ;
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
INTTK int
IDENFR func2
LPARENT (
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 4
SEMICN ;
RETURNTK return
INTCON 10
SEMICN ;
RBRACE }
INTTK int
IDENFR func3
LPARENT (
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 3
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IFTK if
LPARENT (
INTCON 0
OR ||
IDENFR func
LPARENT (
RPARENT )
AND &&
IDENFR func3
LPARENT (
RPARENT )
OR ||
IDENFR func2
LPARENT (
RPARENT )
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d--1"
COMMA ,
IDENFR a
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 1
OR ||
IDENFR func3
LPARENT (
RPARENT )
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d--2"
COMMA ,
IDENFR a
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
OR ||
IDENFR func3
LPARENT (
RPARENT )
OR ||
IDENFR func
LPARENT (
RPARENT )
LSS <
IDENFR func2
LPARENT (
RPARENT )
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d--3"
COMMA ,
IDENFR a
RPARENT )
SEMICN ;
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
